// English schema version 1.0
// Automatically generated by ZMK Antecedent Morph Config Generator

/ {
    behaviors {
        // Base layer
        amenne: am_eng_north_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NORTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quite>, <&amen_without>, <&amen_for_example>, <&amen_problem>, <&amen_basically>, <&amen_joyfully>, <&amen_labyrinth>, <&amen_understand>, <&amen_young>, <&amen_didnt>, <&amen_another>, <&amen_rather>, <&amen_should>, <&amen_thanks_to>, <&amen_guesstimate>, <&amen_maybe>, <&amen_number>, <&amen_enough>, <&amen_in_order>, <&amen_often>, <&amen_zephyr>, <&amen_i_reckon>, <&amen_certainly>, <&amen_during>, <&amen_verbally>, <&amen_kindly>, <&amen_highly_likely>, <&amen_thats_it>, <&amen_no_pain_no_gain>, <&amen_moreover1>, <&amen_go_for_it>, <&amen_prokofyevme>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C D V K H DOT DLLR PLUS EXCL AT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amene: am_eng_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_question>, <&amen_whatever>, <&amen_fortunately>, <&amen_probably>, <&amen_been>, <&amen_jointly>, <&amen_likewise>, <&amen_until>, <&amen_your>, <&amen_cant>, <&amen_anything>, <&amen_really>, <&amen_something>, <&amen_that_is_to_say>, <&amen_gradually>, <&amen_more_or_less>, <&amen_never>, <&amen_everything>, <&amen_in_my_opinion>, <&amen_overall>, <&amen_zealously>, <&amen_i_think>, <&amen_could>, <&amen_despite>, <&amen_vastly>, <&amen_knowledge>, <&amen_hopefully>, <&amen_thats_all_i_hav>, <&amen_shut_up_and_tak>, <&amen_touch>, <&amen_yandexru>, <&amen_sunday>, <&amen_thursday>, <&amen_friday>, <&amen_saturday>, <&amen_monday>, <&amen_tuesday>, <&amen_wednesday>, <&amen_count_me_out>, <&amen_english>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C D V K H DOT DLLR EXCL AT N7 N4 N5 N6 N1 N2 N3 MINUS SPACE>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amense: am_eng_south_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_SOUTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quickly>, <&amen_whenever>, <&amen_from_time_to_ti>, <&amen_primarily>, <&amen_because>, <&amen_just_for_the_fu>, <&amen_lately>, <&amen_upon>, <&amen_yourself>, <&amen_couldnt>, <&amen_after_all>, <&amen_ready>, <&amen_so_to_speak>, <&amen_to_my_mind>, <&amen_greatly>, <&amen_majority>, <&amen_night_and_day>, <&amen_exactly>, <&amen_in_advance>, <&amen_organization>, <&amen_zero_hour>, <&amen_i_guess>, <&amen_comparatively>, <&amen_different>, <&amen_vehemently>, <&amen_knowledgeable>, <&amen_highly_unlikely>, <&amen_so_be_it>, <&amen_sure_go_ahead>, <&amen_gmailcom>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C D V K H DOT EXCL AT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amensw: am_eng_south_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_SOUTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_whoever>, <&amen_financially_spe>, <&amen_program>, <&amen_bit_by_bit>, <&amen_junk_mail>, <&amen_lastly>, <&amen_usually>, <&amen_year>, <&amen_mightnt1>, <&amen_all_in_all>, <&amen_resource>, <&amen_something_like>, <&amen_to_all_intents_>, <&amen_government>, <&amen_malformed>, <&amen_naturally>, <&amen_everyone>, <&amen_if_i_were_you>, <&amen_outside>, <&amen_zip_code>, <&amen_contribute_to>, <&amen_difficult_thoug>, <&amen_vehicle>, <&amen_keenly>, <&amen_helpful>, <&amen_ie>, <&amen_could_you_be_mo>;
            antecedents = <W F P B J L U Y APOS A R S T G M N E I O Z C D V K H DOT FSLH>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amennw: am_eng_north_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NORTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quality>, <&amen_whichever>, <&amen_figuratively_sp>, <&amen_proostas>, <&amen_between>, <&amen_justly>, <&amen_luckily>, <&amen_under>, <&amen_yeah>, <&amen_wont1>, <&amen_above_all>, <&amen_real>, <&amen_supposing>, <&amen_to_put_it_mildl>, <&amen_go_ahead1>, <&amen_myself>, <&amen_namely>, <&amen_everybody>, <&amen_in_order_to>, <&amen_other>, <&amen_zestfully>, <&amen_ill_say>, <&amen_consciously>, <&amen_determination>, <&amen_visualization>, <&amen_knowingly>, <&amen_however>, <&amen_eg>, <&amen_are_you_sure>, <&amen_keep_it_up>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C D V K H DOT FSLH EXCL>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Mouse layer
        amenmosne: am_eng_mouse_north_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MOUSE_NORTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quietly>, <&amen_within>, <&amen_for_certain>, <&amen_provided>, <&amen_behind>, <&amen_juxtaposition>, <&amen_long_standing>, <&amen_unbelievable>, <&amen_youre>, <&amen_as_a_result>, <&amen_reason>, <&amen_such_that>, <&amen_to_some_degree>, <&amen_give_or_take>, <&amen_mind_you>, <&amen_narrowly>, <&amen_each_and_every_>, <&amen_incidentally>, <&amen_on_the_one_hand>, <&amen_zoom_in>, <&amen_ive_made_up_my_>, <&amen_clearly>, <&amen_dawned_on_me>, <&amen_virtually>, <&amen_key_feature>, <&amen_having_said_tha>, <&amen_to_cut_a_long_s>;
            antecedents = <Q W F P B J L U Y A R S T G M N E I O Z X C D V K H DOT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenmose: am_eng_mouse_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MOUSE_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_que_sera_sera>, <&amen_whether>, <&amen_furthermore>, <&amen_possible>, <&amen_before>, <&amen_just_a_moment>, <&amen_lack_of>, <&amen_unheard_of>, <&amen_youll>, <&amen_all_the_same>, <&amen_relevant>, <&amen_surely>, <&amen_the_whole_point>, <&amen_given>, <&amen_meantime>, <&amen_never_mind>, <&amen_every_now_and_t>, <&amen_in_any_case>, <&amen_on_the_other_ha>, <&amen_zoom>, <&amen_i_tend_to_think>, <&amen_carefully>, <&amen_down>, <&amen_vague>, <&amen_key_factor>, <&amen_hard_as_i_tried>, <&amen_in_short>, <&amen_now_then>;
            antecedents = <Q W F P B J L U Y A R S T G M N E I O Z X C D V K H DOT EXCL>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenmosse: am_eng_mouse_south_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MOUSE_SOUTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quorum>, <&amen_whole>, <&amen_fundamentally>, <&amen_particularly>, <&amen_beyond>, <&amen_last_straw>, <&amen_youve>, <&amen_apparently>, <&amen_result>, <&amen_someone>, <&amen_the_other_day>, <&amen_mainstream>, <&amen_now_that>, <&amen_evidence>, <&amen_irreversible>, <&amen_on_balance>, <&amen_im_toying_with_>, <&amen_concerning>, <&amen_day_in_day_out>, <&amen_visible>;
            antecedents = <Q W F P B L Y A R S T M N E I O X C D V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Navigation layer
        amennavne: am_eng_navigation_north_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NAVIGATION_NORTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_qualitatively>, <&amen_whereas>, <&amen_frequently>, <&amen_presumably>, <&amen_by_chance>, <&amen_less_than>, <&amen_unless>, <&amen_you_know_what>, <&amen_didnt1>, <&amen_as_soon_as>, <&amen_red_flag>, <&amen_somewhat>, <&amen_the_moment>, <&amen_greater_than>, <&amen_miscellaneous>, <&amen_not_to_mention>, <&amen_each_other>, <&amen_in_conclusion>, <&amen_on_the_contrary>, <&amen_zero_in_on>, <&amen_it_occurs_to_me>, <&amen_characteristica>, <&amen_doubtless>, <&amen_valid>, <&amen_herself>, <&amen_on_balance1>, <&amen_come_on>;
            antecedents = <Q W F P B L U Y APOS A R S T G M N E I O Z X C D V H DOT EXCL>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amennave: am_eng_navigation_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NAVIGATION_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quantitatively>, <&amen_while>, <&amen_finally>, <&amen_perhaps>, <&amen_by_the_way>, <&amen_jokingly>, <&amen_literally>, <&amen_underlying>, <&amen_you_all>, <&amen_cant1>, <&amen_according_to>, <&amen_recently>, <&amen_seeing_that>, <&amen_therefore>, <&amen_generally_speak>, <&amen_mutually>, <&amen_nevertheless>, <&amen_even_though>, <&amen_it_looks_like>, <&amen_on_the_whole>, <&amen_zealous>, <&amen_its_just_dawned>, <&amen_consequently>, <&amen_directly>, <&amen_various>, <&amen_key_element>, <&amen_himself>, <&amen_to_cap_it_all>, <&amen_in_parenthesis>, <&amen_dream_on>, <&amen_ad_hominem>, <&amen_seventhly>, <&amen_eighthly>, <&amen_ninethly>, <&amen_fourthly>, <&amen_fifthly>, <&amen_sixthly>, <&amen_firstly>, <&amen_secondly>, <&amen_thirdly>, <&amen_zerothly>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C D V K H DOT LPAR EXCL AT N7 N8 N9 N4 N5 N6 N1 N2 N3 N0>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amennavse: am_eng_navigation_south_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NAVIGATION_SOUTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_quid_pro_quo>, <&amen_where>, <&amen_for_sure>, <&amen_popular>, <&amen_besides>, <&amen_lengthy>, <&amen_you_know_who>, <&amen_couldnt1>, <&amen_as_a_result1>, <&amen_report>, <&amen_since>, <&amen_throughout>, <&amen_great_deal_of>, <&amen_myself_included>, <&amen_naive>, <&amen_incomprehensibl>, <&amen_one_of_these_da>, <&amen_i_gather>, <&amen_contrary_to_exp>, <&amen_dear_sirmadam>, <&amen_variety>, <&amen_it_all_boils_do>;
            antecedents = <Q W F P B L Y APOS A R S T G M N I O X C D V DOT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Media layer
        amenmedne: am_eng_media_north_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MEDIA_NORTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_for_this_reason>, <&amen_performance>, <&amen_business>, <&amen_learned>, <&amen_youtube>, <&amen_as_regards>, <&amen_response>, <&amen_seriously>, <&amen_the_odds_are>, <&amen_marginally>, <&amen_nothing_much>, <&amen_except_for>, <&amen_in_the_words_of>, <&amen_off_putting>, <&amen_zenith>, <&amen_as_we_have_seen>, <&amen_condition>, <&amen_versatile>;
            antecedents = <F P B L Y A R S T M N E I O Z X C V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenmede: am_eng_media_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MEDIA_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_with_hindsight>, <&amen_for_all_i_know>, <&amen_property>, <&amen_behavior>, <&amen_launchpad>, <&amen_yippee>, <&amen_at_all_costs>, <&amen_relationship>, <&amen_similarly>, <&amen_time_consuming>, <&amen_magnificent>, <&amen_narrow_minded>, <&amen_every_bit_as>, <&amen_indecipherable>, <&amen_outdated>, <&amen_zealot>, <&amen_i_believe>, <&amen_computer>, <&amen_verbatim>;
            antecedents = <W F P B L Y A R S T M N E I O Z X C V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenmedse: am_eng_media_south_east {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_MEDIA_SOUTH_EAST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_for_the_foresee>, <&amen_project>, <&amen_building>, <&amen_january>, <&amen_lesser_of_two_e>, <&amen_yada_yada_yada>, <&amen_any_moment_now>, <&amen_research>, <&amen_some_day>, <&amen_theres_no_point>, <&amen_management>, <&amen_november>, <&amen_it_goes_without>, <&amen_october>, <&amen_character>, <&amen_version>;
            antecedents = <F P B J L Y A R S T M N I O C V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Function layer
        amenfunsw: am_eng_function_south_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_FUNCTION_SOUTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_from_now_on>, <&amen_privately>, <&amen_by_all_means>, <&amen_last_minute>, <&amen_unknown>, <&amen_you_know>, <&amen_as_far_as_im_co>, <&amen_schedule>, <&amen_theres_every_ch>, <&amen_manually>, <&amen_native>, <&amen_even_so>, <&amen_if_you_want_my_>, <&amen_on_condition_th>, <&amen_vulnerable>, <&amen_henceforth>;
            antecedents = <F P B L U Y A S T M N E I O V H>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenfunw: am_eng_function_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_FUNCTION_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_funnily_enough>, <&amen_promising>, <&amen_before_i_forget>, <&amen_long_term>, <&amen_unpredictable>, <&amen_year_in_year_ou>, <&amen_according_to_my>, <&amen_some_book_or_ot>, <&amen_the_chances_are>, <&amen_miles_better>, <&amen_nascent>, <&amen_ever_since>, <&amen_in_the_end>, <&amen_oddly_enough>, <&amen_suffice_it_to_s>, <&amen_variable>, <&amen_here_and_there>;
            antecedents = <F P B L U Y A S T M N E I O X V H>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amenfunnw: am_eng_function_north_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_FUNCTION_NORTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_february>, <&amen_provided_that>, <&amen_by_the_end_of>, <&amen_liberally>, <&amen_yes_and_no>, <&amen_april>, <&amen_september>, <&amen_to_no_ones_surp>, <&amen_make_the_most_o>, <&amen_notwithstanding>, <&amen_experience>, <&amen_in_the_dark>, <&amen_off_the_top_of_>, <&amen_december>, <&amen_variation>;
            antecedents = <F P B L Y A S T M N E I O D V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Number layer
        amennumsw: am_eng_number_south_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NUMBER_SOUTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_worthwhile>, <&amen_forthcoming>, <&amen_personally_id_s>, <&amen_by_any_means>, <&amen_juicy_gossip>, <&amen_let_alone>, <&amen_up_to_a_point>, <&amen_yearly>, <&amen_wont>, <&amen_actually>, <&amen_rose_tinted_spe>, <&amen_simply_put>, <&amen_taken_together>, <&amen_go_ahead>, <&amen_merely>, <&amen_nobody>, <&amen_explicitily>, <&amen_in_spite_of>, <&amen_out_of_the_blue>, <&amen_it_appears_that>, <&amen_common_ground>, <&amen_vociferously>, <&amen_killer_feature>, <&amen_half_a_mind_to>, <&amen_to_summarise>;
            antecedents = <W F P B J L U Y APOS A R S T G M N E I O X C V K H DOT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amennumw: am_eng_number_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NUMBER_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_query>, <&amen_what_is_more>, <&amen_for_some_time>, <&amen_personally_spea>, <&amen_by_any_chance>, <&amen_jaw_dropping>, <&amen_last_but_not_le>, <&amen_unfortunately>, <&amen_yesterday>, <&amen_although>, <&amen_roughly_speakin>, <&amen_suddenly>, <&amen_thats_all_very_>, <&amen_getting_anywher>, <&amen_might>, <&amen_nothing>, <&amen_eventually>, <&amen_instance>, <&amen_object>, <&amen_sort_it_out_onc>, <&amen_conversely>, <&amen_vantage_point>, <&amen_keyboard>, <&amen_honestly>, <&amen_to_sum_up>, <&amen_what_the_future>, <&amen_in_parenthesis1>, <&amen_additional>, <&amen_seventhly1>, <&amen_eighthly1>, <&amen_ninethly1>, <&amen_fourthly1>, <&amen_fifthly1>, <&amen_sixthly1>, <&amen_firstly1>, <&amen_secondly1>, <&amen_thirdly1>, <&amen_zerothly1>;
            antecedents = <Q W F P B J L U Y A R S T G M N E I O X C V K H DOT FSLH LPAR PLUS N7 N8 N9 N4 N5 N6 N1 N2 N3 N0>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amennumnw: am_eng_number_north_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_NUMBER_NORTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_worth_it>, <&amen_first_and_forem>, <&amen_prepare>, <&amen_but_even_so>, <&amen_laboriously>, <&amen_up_to_you>, <&amen_you_name_it>, <&amen_mightnt>, <&amen_all_things_cons>, <&amen_significant>, <&amen_the_facts_sugge>, <&amen_moving_on>, <&amen_no_one>, <&amen_elsewhere>, <&amen_in_the_main>, <&amen_one_another>, <&amen_candidate>, <&amen_violation>, <&amen_high_hopes_of>, <&amen_in_summary>;
            antecedents = <W F P B L U Y APOS A S T M N E I O C V H DOT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        // Symbol layer
        amensymsw: am_eng_symbol_south_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_SYMBOL_SOUTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_with_the_except>, <&amen_for_the_most_pa>, <&amen_people>, <&amen_broadly_speakin>, <&amen_jugular>, <&amen_leading>, <&amen_unconditionally>, <&amen_yours_sincerely>, <&amen_in_such_a_way_t>, <&amen_already>, <&amen_red_handed>, <&amen_specially>, <&amen_themselves>, <&amen_member>, <&amen_necessary>, <&amen_especially>, <&amen_immediately>, <&amen_or_else>, <&amen_zillion>, <&amen_we_now_turn_to>, <&amen_constructively>, <&amen_valuable>, <&amen_kiss_principle>, <&amen_hardly_ever>, <&amen_in_conclusion1>;
            antecedents = <W F P B J L U Y APOS A R S T M N E I O Z X C V K H DOT>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amensymw: am_eng_symbol_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_SYMBOL_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_questionable>, <&amen_when_it_comes_t>, <&amen_for_instance>, <&amen_precisely>, <&amen_by_and_large>, <&amen_judgement>, <&amen_largely>, <&amen_ultimately>, <&amen_youre_welcome>, <&amen_in_such_a_way_a>, <&amen_almost>, <&amen_relatively_spea>, <&amen_sometimes>, <&amen_together>, <&amen_green_light>, <&amen_moreover>, <&amen_nearly>, <&amen_essentially>, <&amen_in_other_words>, <&amen_otherwise>, <&amen_zigzag>, <&amen_at_this_point>, <&amen_cheers>, <&amen_vice_versa>, <&amen_know_how>, <&amen_hardly_enough>, <&amen_to_conclude>, <&amen_to_whom_it_may_>, <&amen_additional1>;
            antecedents = <Q W F P B J L U Y APOS A R S T G M N E I O Z X C V K H DOT FSLH PLUS>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
        amensymnw: am_eng_symbol_north_west {
            compatible = "zmk,behavior-antecedent-morph";
            label = "AM_ENG_SYMBOL_NORTH_WEST";
            #binding-cells = <0>;
            defaults = <&none>;
            bindings = <&amen_without_delay>, <&amen_for_some_reason>, <&amen_process>, <&amen_believe_it_or_n>, <&amen_language>, <&amen_used_to>, <&amen_you_live_and_le>, <&amen_at_the_end_of_t>, <&amen_speaking_of>, <&amen_to_my_certain_k>, <&amen_mandatory>, <&amen_nice>, <&amen_employee>, <&amen_in_contrast>, <&amen_opportunity>, <&amen_come_what_may>, <&amen_carte_blanche>, <&amen_vantage_point1>;
            antecedents = <W F P B L U Y A S T M N E I O X C V>;
            max-delay-ms = <U_ANTMORPH_DELAY>;
        };
    };
    macros {
        amen_quite: amen_quite {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uite
            bindings = <&kp U &kp I &kp T &kp E>;
        };
        amen_question: amen_question {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uestion
            bindings = <&kp U &kp E &kp S &kp T &kp I &kp O &kp N>;
        };
        amen_quickly: amen_quickly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uickly
            bindings = <&kp U &kp I &kp C &kp K &kp L &kp Y>;
        };
        amen_quality: amen_quality {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uality
            bindings = <&kp U &kp A &kp L &kp I &kp T &kp Y>;
        };
        amen_quietly: amen_quietly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uietly
            bindings = <&kp U &kp I &kp E &kp T &kp L &kp Y>;
        };
        amen_que_sera_sera: amen_que_sera_sera {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)ue sera sera
            bindings = <&kp U &kp E &kp SPACE &kp S &kp E &kp R &kp A &kp SPACE &kp S &kp E &kp R &kp A>;
        };
        amen_quorum: amen_quorum {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uorum
            bindings = <&kp U &kp O &kp R &kp U &kp M>;
        };
        amen_qualitatively: amen_qualitatively {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)ualitatively
            bindings = <&kp U &kp A &kp L &kp I &kp T &kp A &kp T &kp I &kp V &kp E &kp L &kp Y>;
        };
        amen_quantitatively: amen_quantitatively {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uantitatively
            bindings = <&kp U &kp A &kp N &kp T &kp I &kp T &kp A &kp T &kp I &kp V &kp E &kp L &kp Y>;
        };
        amen_quid_pro_quo: amen_quid_pro_quo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uid pro quo
            bindings = <&kp U &kp I &kp D &kp SPACE &kp P &kp R &kp O &kp SPACE &kp Q &kp U &kp O>;
        };
        amen_query: amen_query {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uery
            bindings = <&kp U &kp E &kp R &kp Y>;
        };
        amen_questionable: amen_questionable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (q)uestionable
            bindings = <&kp U &kp E &kp S &kp T &kp I &kp O &kp N &kp A &kp B &kp L &kp E>;
        };
        amen_without: amen_without {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)ithout
            bindings = <&kp I &kp T &kp H &kp O &kp U &kp T>;
        };
        amen_whatever: amen_whatever {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hatever
            bindings = <&kp H &kp A &kp T &kp E &kp V &kp E &kp R>;
        };
        amen_whenever: amen_whenever {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)henever
            bindings = <&kp H &kp E &kp N &kp E &kp V &kp E &kp R>;
        };
        amen_whoever: amen_whoever {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hoever
            bindings = <&kp H &kp O &kp E &kp V &kp E &kp R>;
        };
        amen_whichever: amen_whichever {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hichever
            bindings = <&kp H &kp I &kp C &kp H &kp E &kp V &kp E &kp R>;
        };
        amen_within: amen_within {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)ithin
            bindings = <&kp I &kp T &kp H &kp I &kp N>;
        };
        amen_whether: amen_whether {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hether
            bindings = <&kp H &kp E &kp T &kp H &kp E &kp R>;
        };
        amen_whole: amen_whole {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hole
            bindings = <&kp H &kp O &kp L &kp E>;
        };
        amen_whereas: amen_whereas {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hereas
            bindings = <&kp H &kp E &kp R &kp E &kp A &kp S>;
        };
        amen_while: amen_while {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hile
            bindings = <&kp H &kp I &kp L &kp E>;
        };
        amen_where: amen_where {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)here
            bindings = <&kp H &kp E &kp R &kp E>;
        };
        amen_with_hindsight: amen_with_hindsight {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)ith hindsight
            bindings = <&kp I &kp T &kp H &kp SPACE &kp H &kp I &kp N &kp D &kp S &kp I &kp G &kp H &kp T>;
        };
        amen_worthwhile: amen_worthwhile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)orthwhile
            bindings = <&kp O &kp R &kp T &kp H &kp W &kp H &kp I &kp L &kp E>;
        };
        amen_what_is_more: amen_what_is_more {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hat is more
            bindings = <&kp H &kp A &kp T &kp SPACE &kp I &kp S &kp SPACE &kp M &kp O &kp R &kp E>;
        };
        amen_worth_it: amen_worth_it {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)orth it
            bindings = <&kp O &kp R &kp T &kp H &kp SPACE &kp I &kp T>;
        };
        amen_with_the_except: amen_with_the_except {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)ith the exception of
            bindings = <&kp I &kp T &kp H &kp SPACE &kp T &kp H &kp E &kp SPACE &kp E &kp X &kp C &kp E &kp P &kp T &kp I &kp O &kp N &kp SPACE &kp O &kp F>;
        };
        amen_when_it_comes_t: amen_when_it_comes_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)hen it comes to
            bindings = <&kp H &kp E &kp N &kp SPACE &kp I &kp T &kp SPACE &kp C &kp O &kp M &kp E &kp S &kp SPACE &kp T &kp O>;
        };
        amen_without_delay: amen_without_delay {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (w)ithout delay
            bindings = <&kp I &kp T &kp H &kp O &kp U &kp T &kp SPACE &kp D &kp E &kp L &kp A &kp Y>;
        };
        amen_for_example: amen_for_example {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or example
            bindings = <&kp O &kp R &kp SPACE &kp E &kp X &kp A &kp M &kp P &kp L &kp E>;
        };
        amen_fortunately: amen_fortunately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)ortunately
            bindings = <&kp O &kp R &kp T &kp U &kp N &kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_from_time_to_ti: amen_from_time_to_ti {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)rom time to time
            bindings = <&kp R &kp O &kp M &kp SPACE &kp T &kp I &kp M &kp E &kp SPACE &kp T &kp O &kp SPACE &kp T &kp I &kp M &kp E>;
        };
        amen_financially_spe: amen_financially_spe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)inancially speakinig
            bindings = <&kp I &kp N &kp A &kp N &kp C &kp I &kp A &kp L &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp I &kp G>;
        };
        amen_figuratively_sp: amen_figuratively_sp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)iguratively speaking
            bindings = <&kp I &kp G &kp U &kp R &kp A &kp T &kp I &kp V &kp E &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G>;
        };
        amen_for_certain: amen_for_certain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or certain
            bindings = <&kp O &kp R &kp SPACE &kp C &kp E &kp R &kp T &kp A &kp I &kp N>;
        };
        amen_furthermore: amen_furthermore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)urthermore
            bindings = <&kp U &kp R &kp T &kp H &kp E &kp R &kp M &kp O &kp R &kp E>;
        };
        amen_fundamentally: amen_fundamentally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)undamentally
            bindings = <&kp U &kp N &kp D &kp A &kp M &kp E &kp N &kp T &kp A &kp L &kp L &kp Y>;
        };
        amen_frequently: amen_frequently {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)requently
            bindings = <&kp R &kp E &kp Q &kp U &kp E &kp N &kp T &kp L &kp Y>;
        };
        amen_finally: amen_finally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)inally
            bindings = <&kp I &kp N &kp A &kp L &kp L &kp Y>;
        };
        amen_for_sure: amen_for_sure {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or sure
            bindings = <&kp O &kp R &kp SPACE &kp S &kp U &kp R &kp E>;
        };
        amen_for_this_reason: amen_for_this_reason {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or this reason
            bindings = <&kp O &kp R &kp SPACE &kp T &kp H &kp I &kp S &kp SPACE &kp R &kp E &kp A &kp S &kp O &kp N>;
        };
        amen_for_all_i_know: amen_for_all_i_know {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or all I know
            bindings = <&kp O &kp R &kp SPACE &kp A &kp L &kp L &kp SPACE &kp LS(I) &kp SPACE &kp K &kp N &kp O &kp W>;
        };
        amen_for_the_foresee: amen_for_the_foresee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or the foreseeable future
            bindings = <&kp O &kp R &kp SPACE &kp T &kp H &kp E &kp SPACE &kp F &kp O &kp R &kp E &kp S &kp E &kp E &kp A &kp B &kp L &kp E &kp SPACE &kp F &kp U &kp T &kp U &kp R &kp E>;
        };
        amen_from_now_on: amen_from_now_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)rom now on
            bindings = <&kp R &kp O &kp M &kp SPACE &kp N &kp O &kp W &kp SPACE &kp O &kp N>;
        };
        amen_funnily_enough: amen_funnily_enough {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)unnily enough
            bindings = <&kp U &kp N &kp N &kp I &kp L &kp Y &kp SPACE &kp E &kp N &kp O &kp U &kp G &kp H>;
        };
        amen_february: amen_february {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)ebruary
            bindings = <&kp E &kp B &kp R &kp U &kp A &kp R &kp Y>;
        };
        amen_forthcoming: amen_forthcoming {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)orthcoming
            bindings = <&kp O &kp R &kp T &kp H &kp C &kp O &kp M &kp I &kp N &kp G>;
        };
        amen_for_some_time: amen_for_some_time {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or some time
            bindings = <&kp O &kp R &kp SPACE &kp S &kp O &kp M &kp E &kp SPACE &kp T &kp I &kp M &kp E>;
        };
        amen_first_and_forem: amen_first_and_forem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)irst and foremost
            bindings = <&kp I &kp R &kp S &kp T &kp SPACE &kp A &kp N &kp D &kp SPACE &kp F &kp O &kp R &kp E &kp M &kp O &kp S &kp T>;
        };
        amen_for_the_most_pa: amen_for_the_most_pa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or the most part
            bindings = <&kp O &kp R &kp SPACE &kp T &kp H &kp E &kp SPACE &kp M &kp O &kp S &kp T &kp SPACE &kp P &kp A &kp R &kp T>;
        };
        amen_for_instance: amen_for_instance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or instance
            bindings = <&kp O &kp R &kp SPACE &kp I &kp N &kp S &kp T &kp A &kp N &kp C &kp E>;
        };
        amen_for_some_reason: amen_for_some_reason {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (f)or some reason or other
            bindings = <&kp O &kp R &kp SPACE &kp S &kp O &kp M &kp E &kp SPACE &kp R &kp E &kp A &kp S &kp O &kp N &kp SPACE &kp O &kp R &kp SPACE &kp O &kp T &kp H &kp E &kp R>;
        };
        amen_problem: amen_problem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)roblem
            bindings = <&kp R &kp O &kp B &kp L &kp E &kp M>;
        };
        amen_probably: amen_probably {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)robably
            bindings = <&kp R &kp O &kp B &kp A &kp B &kp L &kp Y>;
        };
        amen_primarily: amen_primarily {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rimarily
            bindings = <&kp R &kp I &kp M &kp A &kp R &kp I &kp L &kp Y>;
        };
        amen_program: amen_program {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rogram
            bindings = <&kp R &kp O &kp G &kp R &kp A &kp M>;
        };
        amen_proostas: amen_proostas {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)roostas
            bindings = <&kp R &kp O &kp O &kp S &kp T &kp A &kp S>;
        };
        amen_provided: amen_provided {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rovided
            bindings = <&kp R &kp O &kp V &kp I &kp D &kp E &kp D>;
        };
        amen_possible: amen_possible {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)ossible
            bindings = <&kp O &kp S &kp S &kp I &kp B &kp L &kp E>;
        };
        amen_particularly: amen_particularly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)articularly
            bindings = <&kp A &kp R &kp T &kp I &kp C &kp U &kp L &kp A &kp R &kp L &kp Y>;
        };
        amen_presumably: amen_presumably {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)resumably
            bindings = <&kp R &kp E &kp S &kp U &kp M &kp A &kp B &kp L &kp Y>;
        };
        amen_perhaps: amen_perhaps {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)erhaps
            bindings = <&kp E &kp R &kp H &kp A &kp P &kp S>;
        };
        amen_popular: amen_popular {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)opular
            bindings = <&kp O &kp P &kp U &kp L &kp A &kp R>;
        };
        amen_performance: amen_performance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)erformance
            bindings = <&kp E &kp R &kp F &kp O &kp R &kp M &kp A &kp N &kp C &kp E>;
        };
        amen_property: amen_property {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)roperty
            bindings = <&kp R &kp O &kp P &kp E &kp R &kp T &kp Y>;
        };
        amen_project: amen_project {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)roject
            bindings = <&kp R &kp O &kp J &kp E &kp C &kp T>;
        };
        amen_privately: amen_privately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rivately
            bindings = <&kp R &kp I &kp V &kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_promising: amen_promising {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)romising
            bindings = <&kp R &kp O &kp M &kp I &kp S &kp I &kp N &kp G>;
        };
        amen_provided_that: amen_provided_that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rovided that
            bindings = <&kp R &kp O &kp V &kp I &kp D &kp E &kp D &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_personally_id_s: amen_personally_id_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)ersonally, I’d say
            bindings = <&kp E &kp R &kp S &kp O &kp N &kp A &kp L &kp L &kp Y &kp COMMA &kp SPACE &kp LS(I) &kp APOS &kp D &kp SPACE &kp S &kp A &kp Y>;
        };
        amen_personally_spea: amen_personally_spea {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)ersonally speaking
            bindings = <&kp E &kp R &kp S &kp O &kp N &kp A &kp L &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G>;
        };
        amen_prepare: amen_prepare {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)repare
            bindings = <&kp R &kp E &kp P &kp A &kp R &kp E>;
        };
        amen_people: amen_people {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)eople
            bindings = <&kp E &kp O &kp P &kp L &kp E>;
        };
        amen_precisely: amen_precisely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)recisely
            bindings = <&kp R &kp E &kp C &kp I &kp S &kp E &kp L &kp Y>;
        };
        amen_process: amen_process {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (p)rocess
            bindings = <&kp R &kp O &kp C &kp E &kp S &kp S>;
        };
        amen_basically: amen_basically {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)asically
            bindings = <&kp A &kp S &kp I &kp C &kp A &kp L &kp L &kp Y>;
        };
        amen_been: amen_been {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)een
            bindings = <&kp E &kp E &kp N>;
        };
        amen_because: amen_because {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)ecause
            bindings = <&kp E &kp C &kp A &kp U &kp S &kp E>;
        };
        amen_bit_by_bit: amen_bit_by_bit {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)it by bit
            bindings = <&kp I &kp T &kp SPACE &kp B &kp Y &kp SPACE &kp B &kp I &kp T>;
        };
        amen_between: amen_between {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)etween
            bindings = <&kp E &kp T &kp W &kp E &kp E &kp N>;
        };
        amen_behind: amen_behind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)ehind
            bindings = <&kp E &kp H &kp I &kp N &kp D>;
        };
        amen_before: amen_before {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)efore
            bindings = <&kp E &kp F &kp O &kp R &kp E>;
        };
        amen_beyond: amen_beyond {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)eyond
            bindings = <&kp E &kp Y &kp O &kp N &kp D>;
        };
        amen_by_chance: amen_by_chance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y chance
            bindings = <&kp Y &kp SPACE &kp C &kp H &kp A &kp N &kp C &kp E>;
        };
        amen_by_the_way: amen_by_the_way {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y the way
            bindings = <&kp Y &kp SPACE &kp T &kp H &kp E &kp SPACE &kp W &kp A &kp Y>;
        };
        amen_besides: amen_besides {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)esides
            bindings = <&kp E &kp S &kp I &kp D &kp E &kp S>;
        };
        amen_business: amen_business {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)usiness
            bindings = <&kp U &kp S &kp I &kp N &kp E &kp S &kp S>;
        };
        amen_behavior: amen_behavior {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)ehavior
            bindings = <&kp E &kp H &kp A &kp V &kp I &kp O &kp R>;
        };
        amen_building: amen_building {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)uilding
            bindings = <&kp U &kp I &kp L &kp D &kp I &kp N &kp G>;
        };
        amen_by_all_means: amen_by_all_means {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y all means
            bindings = <&kp Y &kp SPACE &kp A &kp L &kp L &kp SPACE &kp M &kp E &kp A &kp N &kp S>;
        };
        amen_before_i_forget: amen_before_i_forget {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)efore I forget
            bindings = <&kp E &kp F &kp O &kp R &kp E &kp SPACE &kp LS(I) &kp SPACE &kp F &kp O &kp R &kp G &kp E &kp T>;
        };
        amen_by_the_end_of: amen_by_the_end_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y the end of
            bindings = <&kp Y &kp SPACE &kp T &kp H &kp E &kp SPACE &kp E &kp N &kp D &kp SPACE &kp O &kp F>;
        };
        amen_by_any_means: amen_by_any_means {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y any means
            bindings = <&kp Y &kp SPACE &kp A &kp N &kp Y &kp SPACE &kp M &kp E &kp A &kp N &kp S>;
        };
        amen_by_any_chance: amen_by_any_chance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y any chance
            bindings = <&kp Y &kp SPACE &kp A &kp N &kp Y &kp SPACE &kp C &kp H &kp A &kp N &kp C &kp E>;
        };
        amen_but_even_so: amen_but_even_so {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)ut even so
            bindings = <&kp U &kp T &kp SPACE &kp E &kp V &kp E &kp N &kp SPACE &kp S &kp O>;
        };
        amen_broadly_speakin: amen_broadly_speakin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)roadly speaking 
            bindings = <&kp R &kp O &kp A &kp D &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G &kp SPACE>;
        };
        amen_by_and_large: amen_by_and_large {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)y and large 
            bindings = <&kp Y &kp SPACE &kp A &kp N &kp D &kp SPACE &kp L &kp A &kp R &kp G &kp E &kp SPACE>;
        };
        amen_believe_it_or_n: amen_believe_it_or_n {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (b)elieve it or not
            bindings = <&kp E &kp L &kp I &kp E &kp V &kp E &kp SPACE &kp I &kp T &kp SPACE &kp O &kp R &kp SPACE &kp N &kp O &kp T>;
        };
        amen_joyfully: amen_joyfully {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)oyfully
            bindings = <&kp O &kp Y &kp F &kp U &kp L &kp L &kp Y>;
        };
        amen_jointly: amen_jointly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)ointly
            bindings = <&kp O &kp I &kp N &kp T &kp L &kp Y>;
        };
        amen_just_for_the_fu: amen_just_for_the_fu {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)ust for the fun of it
            bindings = <&kp U &kp S &kp T &kp SPACE &kp F &kp O &kp R &kp SPACE &kp T &kp H &kp E &kp SPACE &kp F &kp U &kp N &kp SPACE &kp O &kp F &kp SPACE &kp I &kp T>;
        };
        amen_junk_mail: amen_junk_mail {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)unk mail
            bindings = <&kp U &kp N &kp K &kp SPACE &kp M &kp A &kp I &kp L>;
        };
        amen_justly: amen_justly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)ustly
            bindings = <&kp U &kp S &kp T &kp L &kp Y>;
        };
        amen_juxtaposition: amen_juxtaposition {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)uxtaposition
            bindings = <&kp U &kp X &kp T &kp A &kp P &kp O &kp S &kp I &kp T &kp I &kp O &kp N>;
        };
        amen_just_a_moment: amen_just_a_moment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)ust a moment
            bindings = <&kp U &kp S &kp T &kp SPACE &kp A &kp SPACE &kp M &kp O &kp M &kp E &kp N &kp T>;
        };
        amen_jokingly: amen_jokingly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)okingly
            bindings = <&kp O &kp K &kp I &kp N &kp G &kp L &kp Y>;
        };
        amen_january: amen_january {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)anuary
            bindings = <&kp A &kp N &kp U &kp A &kp R &kp Y>;
        };
        amen_juicy_gossip: amen_juicy_gossip {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)uicy gossip
            bindings = <&kp U &kp I &kp C &kp Y &kp SPACE &kp G &kp O &kp S &kp S &kp I &kp P>;
        };
        amen_jaw_dropping: amen_jaw_dropping {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)aw-dropping
            bindings = <&kp A &kp W &kp MINUS &kp D &kp R &kp O &kp P &kp P &kp I &kp N &kp G>;
        };
        amen_jugular: amen_jugular {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)ugular
            bindings = <&kp U &kp G &kp U &kp L &kp A &kp R>;
        };
        amen_judgement: amen_judgement {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (j)udgement
            bindings = <&kp U &kp D &kp G &kp E &kp M &kp E &kp N &kp T>;
        };
        amen_labyrinth: amen_labyrinth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)abyrinth
            bindings = <&kp A &kp B &kp Y &kp R &kp I &kp N &kp T &kp H>;
        };
        amen_likewise: amen_likewise {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ikewise
            bindings = <&kp I &kp K &kp E &kp W &kp I &kp S &kp E>;
        };
        amen_lately: amen_lately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ately
            bindings = <&kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_lastly: amen_lastly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)astly
            bindings = <&kp A &kp S &kp T &kp L &kp Y>;
        };
        amen_luckily: amen_luckily {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)uckily
            bindings = <&kp U &kp C &kp K &kp I &kp L &kp Y>;
        };
        amen_long_standing: amen_long_standing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ong-standing
            bindings = <&kp O &kp N &kp G &kp MINUS &kp S &kp T &kp A &kp N &kp D &kp I &kp N &kp G>;
        };
        amen_lack_of: amen_lack_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ack of
            bindings = <&kp A &kp C &kp K &kp SPACE &kp O &kp F>;
        };
        amen_last_straw: amen_last_straw {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ast straw
            bindings = <&kp A &kp S &kp T &kp SPACE &kp S &kp T &kp R &kp A &kp W>;
        };
        amen_less_than: amen_less_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ess than
            bindings = <&kp E &kp S &kp S &kp SPACE &kp T &kp H &kp A &kp N>;
        };
        amen_literally: amen_literally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)iterally
            bindings = <&kp I &kp T &kp E &kp R &kp A &kp L &kp L &kp Y>;
        };
        amen_lengthy: amen_lengthy {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)engthy
            bindings = <&kp E &kp N &kp G &kp T &kp H &kp Y>;
        };
        amen_learned: amen_learned {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)earned
            bindings = <&kp E &kp A &kp R &kp N &kp E &kp D>;
        };
        amen_launchpad: amen_launchpad {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)aunchpad
            bindings = <&kp A &kp U &kp N &kp C &kp H &kp P &kp A &kp D>;
        };
        amen_lesser_of_two_e: amen_lesser_of_two_e {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)esser of two evils
            bindings = <&kp E &kp S &kp S &kp E &kp R &kp SPACE &kp O &kp F &kp SPACE &kp T &kp W &kp O &kp SPACE &kp E &kp V &kp I &kp L &kp S>;
        };
        amen_last_minute: amen_last_minute {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ast-minute
            bindings = <&kp A &kp S &kp T &kp MINUS &kp M &kp I &kp N &kp U &kp T &kp E>;
        };
        amen_long_term: amen_long_term {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ong-term
            bindings = <&kp O &kp N &kp G &kp MINUS &kp T &kp E &kp R &kp M>;
        };
        amen_liberally: amen_liberally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)iberally
            bindings = <&kp I &kp B &kp E &kp R &kp A &kp L &kp L &kp Y>;
        };
        amen_let_alone: amen_let_alone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)et alone
            bindings = <&kp E &kp T &kp SPACE &kp A &kp L &kp O &kp N &kp E>;
        };
        amen_last_but_not_le: amen_last_but_not_le {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)ast but not least 
            bindings = <&kp A &kp S &kp T &kp SPACE &kp B &kp U &kp T &kp SPACE &kp N &kp O &kp T &kp SPACE &kp L &kp E &kp A &kp S &kp T &kp SPACE>;
        };
        amen_laboriously: amen_laboriously {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)aboriously
            bindings = <&kp A &kp B &kp O &kp R &kp I &kp O &kp U &kp S &kp L &kp Y>;
        };
        amen_leading: amen_leading {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)eading
            bindings = <&kp E &kp A &kp D &kp I &kp N &kp G>;
        };
        amen_largely: amen_largely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)argely
            bindings = <&kp A &kp R &kp G &kp E &kp L &kp Y>;
        };
        amen_language: amen_language {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (l)anguage
            bindings = <&kp A &kp N &kp G &kp U &kp A &kp G &kp E>;
        };
        amen_understand: amen_understand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nderstand
            bindings = <&kp N &kp D &kp E &kp R &kp S &kp T &kp A &kp N &kp D>;
        };
        amen_until: amen_until {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)ntil
            bindings = <&kp N &kp T &kp I &kp L>;
        };
        amen_upon: amen_upon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)pon
            bindings = <&kp P &kp O &kp N>;
        };
        amen_usually: amen_usually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)sually
            bindings = <&kp S &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_under: amen_under {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nder
            bindings = <&kp N &kp D &kp E &kp R>;
        };
        amen_unbelievable: amen_unbelievable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nbelievable
            bindings = <&kp N &kp B &kp E &kp L &kp I &kp E &kp V &kp A &kp B &kp L &kp E>;
        };
        amen_unheard_of: amen_unheard_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nheard-of
            bindings = <&kp N &kp H &kp E &kp A &kp R &kp D &kp MINUS &kp O &kp F>;
        };
        amen_unless: amen_unless {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nless
            bindings = <&kp N &kp L &kp E &kp S &kp S>;
        };
        amen_underlying: amen_underlying {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nderlying
            bindings = <&kp N &kp D &kp E &kp R &kp L &kp Y &kp I &kp N &kp G>;
        };
        amen_unknown: amen_unknown {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nknown
            bindings = <&kp N &kp K &kp N &kp O &kp W &kp N>;
        };
        amen_unpredictable: amen_unpredictable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)npredictable
            bindings = <&kp N &kp P &kp R &kp E &kp D &kp I &kp C &kp T &kp A &kp B &kp L &kp E>;
        };
        amen_up_to_a_point: amen_up_to_a_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)p to a point
            bindings = <&kp P &kp SPACE &kp T &kp O &kp SPACE &kp A &kp SPACE &kp P &kp O &kp I &kp N &kp T>;
        };
        amen_unfortunately: amen_unfortunately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nfortunately
            bindings = <&kp N &kp F &kp O &kp R &kp T &kp U &kp N &kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_up_to_you: amen_up_to_you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)p to you
            bindings = <&kp P &kp SPACE &kp T &kp O &kp SPACE &kp Y &kp O &kp U>;
        };
        amen_unconditionally: amen_unconditionally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)nconditionally
            bindings = <&kp N &kp C &kp O &kp N &kp D &kp I &kp T &kp I &kp O &kp N &kp A &kp L &kp L &kp Y>;
        };
        amen_ultimately: amen_ultimately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)ltimately
            bindings = <&kp L &kp T &kp I &kp M &kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_used_to: amen_used_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (u)sed to
            bindings = <&kp S &kp E &kp D &kp SPACE &kp T &kp O>;
        };
        amen_young: amen_young {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)oung
            bindings = <&kp O &kp U &kp N &kp G>;
        };
        amen_your: amen_your {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)our
            bindings = <&kp O &kp U &kp R>;
        };
        amen_yourself: amen_yourself {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ourself
            bindings = <&kp O &kp U &kp R &kp S &kp E &kp L &kp F>;
        };
        amen_year: amen_year {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ear
            bindings = <&kp E &kp A &kp R>;
        };
        amen_yeah: amen_yeah {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)eah 
            bindings = <&kp E &kp A &kp H &kp SPACE>;
        };
        amen_youre: amen_youre {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou’re
            bindings = <&kp O &kp U &kp APOS &kp R &kp E>;
        };
        amen_youll: amen_youll {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou’ll
            bindings = <&kp O &kp U &kp APOS &kp L &kp L>;
        };
        amen_youve: amen_youve {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou’ve
            bindings = <&kp O &kp U &kp APOS &kp V &kp E>;
        };
        amen_you_know_what: amen_you_know_what {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou-know-what
            bindings = <&kp O &kp U &kp MINUS &kp K &kp N &kp O &kp W &kp MINUS &kp W &kp H &kp A &kp T>;
        };
        amen_you_all: amen_you_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou-all
            bindings = <&kp O &kp U &kp MINUS &kp A &kp L &kp L>;
        };
        amen_you_know_who: amen_you_know_who {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou-know-who
            bindings = <&kp O &kp U &kp MINUS &kp K &kp N &kp O &kp W &kp MINUS &kp W &kp H &kp O>;
        };
        amen_youtube: amen_youtube {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ouTube
            bindings = <&kp O &kp U &kp LS(T) &kp U &kp B &kp E>;
        };
        amen_yippee: amen_yippee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ippee
            bindings = <&kp I &kp P &kp P &kp E &kp E>;
        };
        amen_yada_yada_yada: amen_yada_yada_yada {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ada yada yada
            bindings = <&kp A &kp D &kp A &kp SPACE &kp Y &kp A &kp D &kp A &kp SPACE &kp Y &kp A &kp D &kp A>;
        };
        amen_you_know: amen_you_know {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou know
            bindings = <&kp O &kp U &kp SPACE &kp K &kp N &kp O &kp W>;
        };
        amen_year_in_year_ou: amen_year_in_year_ou {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ear in, year out
            bindings = <&kp E &kp A &kp R &kp SPACE &kp I &kp N &kp COMMA &kp SPACE &kp Y &kp E &kp A &kp R &kp SPACE &kp O &kp U &kp T>;
        };
        amen_yes_and_no: amen_yes_and_no {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)es and no
            bindings = <&kp E &kp S &kp SPACE &kp A &kp N &kp D &kp SPACE &kp N &kp O>;
        };
        amen_yearly: amen_yearly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)early
            bindings = <&kp E &kp A &kp R &kp L &kp Y>;
        };
        amen_yesterday: amen_yesterday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)esterday
            bindings = <&kp E &kp S &kp T &kp E &kp R &kp D &kp A &kp Y>;
        };
        amen_you_name_it: amen_you_name_it {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou name it
            bindings = <&kp O &kp U &kp SPACE &kp N &kp A &kp M &kp E &kp SPACE &kp I &kp T>;
        };
        amen_yours_sincerely: amen_yours_sincerely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ours sincerely,
            bindings = <&kp O &kp U &kp R &kp S &kp SPACE &kp S &kp I &kp N &kp C &kp E &kp R &kp E &kp L &kp Y &kp COMMA>;
        };
        amen_youre_welcome: amen_youre_welcome {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou’re welcome
            bindings = <&kp O &kp U &kp APOS &kp R &kp E &kp SPACE &kp W &kp E &kp L &kp C &kp O &kp M &kp E>;
        };
        amen_you_live_and_le: amen_you_live_and_le {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (y)ou live and learn
            bindings = <&kp O &kp U &kp SPACE &kp L &kp I &kp V &kp E &kp SPACE &kp A &kp N &kp D &kp SPACE &kp L &kp E &kp A &kp R &kp N>;
        };
        amen_didnt: amen_didnt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]didn’t
            bindings = <&kp BSPC &kp D &kp I &kp D &kp N &kp APOS &kp T>;
        };
        amen_cant: amen_cant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]can’t
            bindings = <&kp BSPC &kp C &kp A &kp N &kp APOS &kp T>;
        };
        amen_couldnt: amen_couldnt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]couldn’t
            bindings = <&kp BSPC &kp C &kp O &kp U &kp L &kp D &kp N &kp APOS &kp T>;
        };
        amen_mightnt1: amen_mightnt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]mightn't
            bindings = <&kp BSPC &kp M &kp I &kp G &kp H &kp T &kp N &kp APOS &kp T>;
        };
        amen_wont1: amen_wont1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]won’t
            bindings = <&kp BSPC &kp W &kp O &kp N &kp APOS &kp T>;
        };
        amen_didnt1: amen_didnt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]Didn’t
            bindings = <&kp BSPC &kp LS(D) &kp I &kp D &kp N &kp APOS &kp T>;
        };
        amen_cant1: amen_cant1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]Can’t
            bindings = <&kp BSPC &kp LS(C) &kp A &kp N &kp APOS &kp T>;
        };
        amen_couldnt1: amen_couldnt1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]Couldn’t
            bindings = <&kp BSPC &kp LS(C) &kp O &kp U &kp L &kp D &kp N &kp APOS &kp T>;
        };
        amen_wont: amen_wont {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]Won’t
            bindings = <&kp BSPC &kp LS(W) &kp O &kp N &kp APOS &kp T>;
        };
        amen_mightnt: amen_mightnt {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]Mightn’t
            bindings = <&kp BSPC &kp LS(M) &kp I &kp G &kp H &kp T &kp N &kp APOS &kp T>;
        };
        amen_in_such_a_way_t: amen_in_such_a_way_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]in such a way that
            bindings = <&kp BSPC &kp I &kp N &kp SPACE &kp S &kp U &kp C &kp H &kp SPACE &kp A &kp SPACE &kp W &kp A &kp Y &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_in_such_a_way_a: amen_in_such_a_way_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [‘]in such a way as to
            bindings = <&kp BSPC &kp I &kp N &kp SPACE &kp S &kp U &kp C &kp H &kp SPACE &kp A &kp SPACE &kp W &kp A &kp Y &kp SPACE &kp A &kp S &kp SPACE &kp T &kp O>;
        };
        amen_another: amen_another {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)nother
            bindings = <&kp N &kp O &kp T &kp H &kp E &kp R>;
        };
        amen_anything: amen_anything {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)nything
            bindings = <&kp N &kp Y &kp T &kp H &kp I &kp N &kp G>;
        };
        amen_after_all: amen_after_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)fter all
            bindings = <&kp F &kp T &kp E &kp R &kp SPACE &kp A &kp L &kp L>;
        };
        amen_all_in_all: amen_all_in_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ll in all
            bindings = <&kp L &kp L &kp SPACE &kp I &kp N &kp SPACE &kp A &kp L &kp L>;
        };
        amen_above_all: amen_above_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)bove all
            bindings = <&kp B &kp O &kp V &kp E &kp SPACE &kp A &kp L &kp L>;
        };
        amen_as_a_result: amen_as_a_result {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)s a result
            bindings = <&kp S &kp SPACE &kp A &kp SPACE &kp R &kp E &kp S &kp U &kp L &kp T>;
        };
        amen_all_the_same: amen_all_the_same {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ll the same
            bindings = <&kp L &kp L &kp SPACE &kp T &kp H &kp E &kp SPACE &kp S &kp A &kp M &kp E>;
        };
        amen_apparently: amen_apparently {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)pparently
            bindings = <&kp P &kp P &kp A &kp R &kp E &kp N &kp T &kp L &kp Y>;
        };
        amen_as_soon_as: amen_as_soon_as {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)s soon as
            bindings = <&kp S &kp SPACE &kp S &kp O &kp O &kp N &kp SPACE &kp A &kp S>;
        };
        amen_according_to: amen_according_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ccording to
            bindings = <&kp C &kp C &kp O &kp R &kp D &kp I &kp N &kp G &kp SPACE &kp T &kp O>;
        };
        amen_as_a_result1: amen_as_a_result1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)s a result
            bindings = <&kp S &kp SPACE &kp A &kp SPACE &kp R &kp E &kp S &kp U &kp L &kp T>;
        };
        amen_as_regards: amen_as_regards {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)s regards
            bindings = <&kp S &kp SPACE &kp R &kp E &kp G &kp A &kp R &kp D &kp S>;
        };
        amen_at_all_costs: amen_at_all_costs {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)t all costs
            bindings = <&kp T &kp SPACE &kp A &kp L &kp L &kp SPACE &kp C &kp O &kp S &kp T &kp S>;
        };
        amen_any_moment_now: amen_any_moment_now {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ny moment now
            bindings = <&kp N &kp Y &kp SPACE &kp M &kp O &kp M &kp E &kp N &kp T &kp SPACE &kp N &kp O &kp W>;
        };
        amen_as_far_as_im_co: amen_as_far_as_im_co {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)s far as I’m concerned
            bindings = <&kp S &kp SPACE &kp F &kp A &kp R &kp SPACE &kp A &kp S &kp SPACE &kp LS(I) &kp APOS &kp M &kp SPACE &kp C &kp O &kp N &kp C &kp E &kp R &kp N &kp E &kp D>;
        };
        amen_according_to_my: amen_according_to_my {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ccording to my information
            bindings = <&kp C &kp C &kp O &kp R &kp D &kp I &kp N &kp G &kp SPACE &kp T &kp O &kp SPACE &kp M &kp Y &kp SPACE &kp I &kp N &kp F &kp O &kp R &kp M &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_april: amen_april {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)pril
            bindings = <&kp P &kp R &kp I &kp L>;
        };
        amen_actually: amen_actually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ctually
            bindings = <&kp C &kp T &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_although: amen_although {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)lthough
            bindings = <&kp L &kp T &kp H &kp O &kp U &kp G &kp H>;
        };
        amen_all_things_cons: amen_all_things_cons {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)ll things considered
            bindings = <&kp L &kp L &kp SPACE &kp T &kp H &kp I &kp N &kp G &kp S &kp SPACE &kp C &kp O &kp N &kp S &kp I &kp D &kp E &kp R &kp E &kp D>;
        };
        amen_already: amen_already {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)lready
            bindings = <&kp L &kp R &kp E &kp A &kp D &kp Y>;
        };
        amen_almost: amen_almost {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)lmost
            bindings = <&kp L &kp M &kp O &kp S &kp T>;
        };
        amen_at_the_end_of_t: amen_at_the_end_of_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (a)t the end of the day
            bindings = <&kp T &kp SPACE &kp T &kp H &kp E &kp SPACE &kp E &kp N &kp D &kp SPACE &kp O &kp F &kp SPACE &kp T &kp H &kp E &kp SPACE &kp D &kp A &kp Y>;
        };
        amen_rather: amen_rather {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)ather
            bindings = <&kp A &kp T &kp H &kp E &kp R>;
        };
        amen_really: amen_really {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)eally
            bindings = <&kp E &kp A &kp L &kp L &kp Y>;
        };
        amen_ready: amen_ready {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)eady
            bindings = <&kp E &kp A &kp D &kp Y>;
        };
        amen_resource: amen_resource {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)esource
            bindings = <&kp E &kp S &kp O &kp U &kp R &kp C &kp E>;
        };
        amen_real: amen_real {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)eal
            bindings = <&kp E &kp A &kp L>;
        };
        amen_reason: amen_reason {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)eason
            bindings = <&kp E &kp A &kp S &kp O &kp N>;
        };
        amen_relevant: amen_relevant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)elevant
            bindings = <&kp E &kp L &kp E &kp V &kp A &kp N &kp T>;
        };
        amen_result: amen_result {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)esult
            bindings = <&kp E &kp S &kp U &kp L &kp T>;
        };
        amen_red_flag: amen_red_flag {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)ed flag
            bindings = <&kp E &kp D &kp SPACE &kp F &kp L &kp A &kp G>;
        };
        amen_recently: amen_recently {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)ecently
            bindings = <&kp E &kp C &kp E &kp N &kp T &kp L &kp Y>;
        };
        amen_report: amen_report {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)eport
            bindings = <&kp E &kp P &kp O &kp R &kp T>;
        };
        amen_response: amen_response {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)esponse
            bindings = <&kp E &kp S &kp P &kp O &kp N &kp S &kp E>;
        };
        amen_relationship: amen_relationship {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)elationship
            bindings = <&kp E &kp L &kp A &kp T &kp I &kp O &kp N &kp S &kp H &kp I &kp P>;
        };
        amen_research: amen_research {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)esearch
            bindings = <&kp E &kp S &kp E &kp A &kp R &kp C &kp H>;
        };
        amen_rose_tinted_spe: amen_rose_tinted_spe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)ose-tinted spectacles
            bindings = <&kp O &kp S &kp E &kp MINUS &kp T &kp I &kp N &kp T &kp E &kp D &kp SPACE &kp S &kp P &kp E &kp C &kp T &kp A &kp C &kp L &kp E &kp S>;
        };
        amen_roughly_speakin: amen_roughly_speakin {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)oughly speaking
            bindings = <&kp O &kp U &kp G &kp H &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G>;
        };
        amen_red_handed: amen_red_handed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)ed-handed
            bindings = <&kp E &kp D &kp MINUS &kp H &kp A &kp N &kp D &kp E &kp D>;
        };
        amen_relatively_spea: amen_relatively_spea {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (r)elatively speaking
            bindings = <&kp E &kp L &kp A &kp T &kp I &kp V &kp E &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G>;
        };
        amen_should: amen_should {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)hould
            bindings = <&kp H &kp O &kp U &kp L &kp D>;
        };
        amen_something: amen_something {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)omething
            bindings = <&kp O &kp M &kp E &kp T &kp H &kp I &kp N &kp G>;
        };
        amen_so_to_speak: amen_so_to_speak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)o to speak
            bindings = <&kp O &kp SPACE &kp T &kp O &kp SPACE &kp S &kp P &kp E &kp A &kp K>;
        };
        amen_something_like: amen_something_like {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)omething like
            bindings = <&kp O &kp M &kp E &kp T &kp H &kp I &kp N &kp G &kp SPACE &kp L &kp I &kp K &kp E>;
        };
        amen_supposing: amen_supposing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)upposing
            bindings = <&kp U &kp P &kp P &kp O &kp S &kp I &kp N &kp G>;
        };
        amen_such_that: amen_such_that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)uch that
            bindings = <&kp U &kp C &kp H &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_surely: amen_surely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)urely
            bindings = <&kp U &kp R &kp E &kp L &kp Y>;
        };
        amen_someone: amen_someone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)omeone
            bindings = <&kp O &kp M &kp E &kp O &kp N &kp E>;
        };
        amen_somewhat: amen_somewhat {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)omewhat
            bindings = <&kp O &kp M &kp E &kp W &kp H &kp A &kp T>;
        };
        amen_seeing_that: amen_seeing_that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)eeing that
            bindings = <&kp E &kp E &kp I &kp N &kp G &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_since: amen_since {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)ince
            bindings = <&kp I &kp N &kp C &kp E>;
        };
        amen_seriously: amen_seriously {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)eriously
            bindings = <&kp E &kp R &kp I &kp O &kp U &kp S &kp L &kp Y>;
        };
        amen_similarly: amen_similarly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)imilarly
            bindings = <&kp I &kp M &kp I &kp L &kp A &kp R &kp L &kp Y>;
        };
        amen_some_day: amen_some_day {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)ome day
            bindings = <&kp O &kp M &kp E &kp SPACE &kp D &kp A &kp Y>;
        };
        amen_schedule: amen_schedule {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)chedule
            bindings = <&kp C &kp H &kp E &kp D &kp U &kp L &kp E>;
        };
        amen_some_book_or_ot: amen_some_book_or_ot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)ome book or other
            bindings = <&kp O &kp M &kp E &kp SPACE &kp B &kp O &kp O &kp K &kp SPACE &kp O &kp R &kp SPACE &kp O &kp T &kp H &kp E &kp R>;
        };
        amen_september: amen_september {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)eptember
            bindings = <&kp E &kp P &kp T &kp E &kp M &kp B &kp E &kp R>;
        };
        amen_simply_put: amen_simply_put {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)imply put
            bindings = <&kp I &kp M &kp P &kp L &kp Y &kp SPACE &kp P &kp U &kp T>;
        };
        amen_suddenly: amen_suddenly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)uddenly
            bindings = <&kp U &kp D &kp D &kp E &kp N &kp L &kp Y>;
        };
        amen_significant: amen_significant {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)ignificant
            bindings = <&kp I &kp G &kp N &kp I &kp F &kp I &kp C &kp A &kp N &kp T>;
        };
        amen_specially: amen_specially {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)pecially
            bindings = <&kp P &kp E &kp C &kp I &kp A &kp L &kp L &kp Y>;
        };
        amen_sometimes: amen_sometimes {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)ometimes
            bindings = <&kp O &kp M &kp E &kp T &kp I &kp M &kp E &kp S>;
        };
        amen_speaking_of: amen_speaking_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (s)peaking of
            bindings = <&kp P &kp E &kp A &kp K &kp I &kp N &kp G &kp SPACE &kp O &kp F>;
        };
        amen_thanks_to: amen_thanks_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)hanks to
            bindings = <&kp H &kp A &kp N &kp K &kp S &kp SPACE &kp T &kp O>;
        };
        amen_that_is_to_say: amen_that_is_to_say {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)hat is to say
            bindings = <&kp H &kp A &kp T &kp SPACE &kp I &kp S &kp SPACE &kp T &kp O &kp SPACE &kp S &kp A &kp Y>;
        };
        amen_to_my_mind: amen_to_my_mind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o my mind
            bindings = <&kp O &kp SPACE &kp M &kp Y &kp SPACE &kp M &kp I &kp N &kp D>;
        };
        amen_to_all_intents_: amen_to_all_intents_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o all intents and purposes
            bindings = <&kp O &kp SPACE &kp A &kp L &kp L &kp SPACE &kp I &kp N &kp T &kp E &kp N &kp T &kp S &kp SPACE &kp A &kp N &kp D &kp SPACE &kp P &kp U &kp R &kp P &kp O &kp S &kp E &kp S>;
        };
        amen_to_put_it_mildl: amen_to_put_it_mildl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o put it mildly
            bindings = <&kp O &kp SPACE &kp P &kp U &kp T &kp SPACE &kp I &kp T &kp SPACE &kp M &kp I &kp L &kp D &kp L &kp Y>;
        };
        amen_to_some_degree: amen_to_some_degree {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o some degree
            bindings = <&kp O &kp SPACE &kp S &kp O &kp M &kp E &kp SPACE &kp D &kp E &kp G &kp R &kp E &kp E>;
        };
        amen_the_whole_point: amen_the_whole_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he whole point
            bindings = <&kp H &kp E &kp SPACE &kp W &kp H &kp O &kp L &kp E &kp SPACE &kp P &kp O &kp I &kp N &kp T>;
        };
        amen_the_other_day: amen_the_other_day {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he other day
            bindings = <&kp H &kp E &kp SPACE &kp O &kp T &kp H &kp E &kp R &kp SPACE &kp D &kp A &kp Y>;
        };
        amen_the_moment: amen_the_moment {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he moment
            bindings = <&kp H &kp E &kp SPACE &kp M &kp O &kp M &kp E &kp N &kp T>;
        };
        amen_therefore: amen_therefore {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)herefore
            bindings = <&kp H &kp E &kp R &kp E &kp F &kp O &kp R &kp E>;
        };
        amen_throughout: amen_throughout {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)hroughout
            bindings = <&kp H &kp R &kp O &kp U &kp G &kp H &kp O &kp U &kp T>;
        };
        amen_the_odds_are: amen_the_odds_are {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he odds are
            bindings = <&kp H &kp E &kp SPACE &kp O &kp D &kp D &kp S &kp SPACE &kp A &kp R &kp E>;
        };
        amen_time_consuming: amen_time_consuming {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)ime-consuming
            bindings = <&kp I &kp M &kp E &kp MINUS &kp C &kp O &kp N &kp S &kp U &kp M &kp I &kp N &kp G>;
        };
        amen_theres_no_point: amen_theres_no_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)here’s no point in
            bindings = <&kp H &kp E &kp R &kp E &kp APOS &kp S &kp SPACE &kp N &kp O &kp SPACE &kp P &kp O &kp I &kp N &kp T &kp SPACE &kp I &kp N>;
        };
        amen_theres_every_ch: amen_theres_every_ch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)here’s every chance
            bindings = <&kp H &kp E &kp R &kp E &kp APOS &kp S &kp SPACE &kp E &kp V &kp E &kp R &kp Y &kp SPACE &kp C &kp H &kp A &kp N &kp C &kp E>;
        };
        amen_the_chances_are: amen_the_chances_are {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he chances are
            bindings = <&kp H &kp E &kp SPACE &kp C &kp H &kp A &kp N &kp C &kp E &kp S &kp SPACE &kp A &kp R &kp E>;
        };
        amen_to_no_ones_surp: amen_to_no_ones_surp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o no one’s surprise
            bindings = <&kp O &kp SPACE &kp N &kp O &kp SPACE &kp O &kp N &kp E &kp APOS &kp S &kp SPACE &kp S &kp U &kp R &kp P &kp R &kp I &kp S &kp E>;
        };
        amen_taken_together: amen_taken_together {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)aken together
            bindings = <&kp A &kp K &kp E &kp N &kp SPACE &kp T &kp O &kp G &kp E &kp T &kp H &kp E &kp R>;
        };
        amen_thats_all_very_: amen_thats_all_very_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)hat’s all very well
            bindings = <&kp H &kp A &kp T &kp APOS &kp S &kp SPACE &kp A &kp L &kp L &kp SPACE &kp V &kp E &kp R &kp Y &kp SPACE &kp W &kp E &kp L &kp L>;
        };
        amen_the_facts_sugge: amen_the_facts_sugge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)he facts suggest that
            bindings = <&kp H &kp E &kp SPACE &kp F &kp A &kp C &kp T &kp S &kp SPACE &kp S &kp U &kp G &kp G &kp E &kp S &kp T &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_themselves: amen_themselves {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)hemselves
            bindings = <&kp H &kp E &kp M &kp S &kp E &kp L &kp V &kp E &kp S>;
        };
        amen_together: amen_together {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)ogether
            bindings = <&kp O &kp G &kp E &kp T &kp H &kp E &kp R>;
        };
        amen_to_my_certain_k: amen_to_my_certain_k {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (t)o my certain knowledge
            bindings = <&kp O &kp SPACE &kp M &kp Y &kp SPACE &kp C &kp E &kp R &kp T &kp A &kp I &kp N &kp SPACE &kp K &kp N &kp O &kp W &kp L &kp E &kp D &kp G &kp E>;
        };
        amen_guesstimate: amen_guesstimate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)uesstimate
            bindings = <&kp U &kp E &kp S &kp S &kp T &kp I &kp M &kp A &kp T &kp E>;
        };
        amen_gradually: amen_gradually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)radually
            bindings = <&kp R &kp A &kp D &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_greatly: amen_greatly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)reatly
            bindings = <&kp R &kp E &kp A &kp T &kp L &kp Y>;
        };
        amen_government: amen_government {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)overnment
            bindings = <&kp O &kp V &kp E &kp R &kp N &kp M &kp E &kp N &kp T>;
        };
        amen_go_ahead1: amen_go_ahead1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)o-ahead
            bindings = <&kp O &kp MINUS &kp A &kp H &kp E &kp A &kp D>;
        };
        amen_give_or_take: amen_give_or_take {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)ive or take
            bindings = <&kp I &kp V &kp E &kp SPACE &kp O &kp R &kp SPACE &kp T &kp A &kp K &kp E>;
        };
        amen_given: amen_given {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)iven
            bindings = <&kp I &kp V &kp E &kp N>;
        };
        amen_greater_than: amen_greater_than {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)reater than
            bindings = <&kp R &kp E &kp A &kp T &kp E &kp R &kp SPACE &kp T &kp H &kp A &kp N>;
        };
        amen_generally_speak: amen_generally_speak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)enerally speaking
            bindings = <&kp E &kp N &kp E &kp R &kp A &kp L &kp L &kp Y &kp SPACE &kp S &kp P &kp E &kp A &kp K &kp I &kp N &kp G>;
        };
        amen_great_deal_of: amen_great_deal_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)reat deal of
            bindings = <&kp R &kp E &kp A &kp T &kp SPACE &kp D &kp E &kp A &kp L &kp SPACE &kp O &kp F>;
        };
        amen_go_ahead: amen_go_ahead {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)o-ahead
            bindings = <&kp O &kp MINUS &kp A &kp H &kp E &kp A &kp D>;
        };
        amen_getting_anywher: amen_getting_anywher {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)etting anywhere
            bindings = <&kp E &kp T &kp T &kp I &kp N &kp G &kp SPACE &kp A &kp N &kp Y &kp W &kp H &kp E &kp R &kp E>;
        };
        amen_green_light: amen_green_light {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (g)reen light
            bindings = <&kp R &kp E &kp E &kp N &kp SPACE &kp L &kp I &kp G &kp H &kp T>;
        };
        amen_maybe: amen_maybe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)aybe
            bindings = <&kp A &kp Y &kp B &kp E>;
        };
        amen_more_or_less: amen_more_or_less {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ore or less
            bindings = <&kp O &kp R &kp E &kp SPACE &kp O &kp R &kp SPACE &kp L &kp E &kp S &kp S>;
        };
        amen_majority: amen_majority {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ajority
            bindings = <&kp A &kp J &kp O &kp R &kp I &kp T &kp Y>;
        };
        amen_malformed: amen_malformed {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)alformed
            bindings = <&kp A &kp L &kp F &kp O &kp R &kp M &kp E &kp D>;
        };
        amen_myself: amen_myself {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)yself
            bindings = <&kp Y &kp S &kp E &kp L &kp F>;
        };
        amen_mind_you: amen_mind_you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ind you
            bindings = <&kp I &kp N &kp D &kp SPACE &kp Y &kp O &kp U>;
        };
        amen_meantime: amen_meantime {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)eantime
            bindings = <&kp E &kp A &kp N &kp T &kp I &kp M &kp E>;
        };
        amen_mainstream: amen_mainstream {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ainstream
            bindings = <&kp A &kp I &kp N &kp S &kp T &kp R &kp E &kp A &kp M>;
        };
        amen_miscellaneous: amen_miscellaneous {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)iscellaneous
            bindings = <&kp I &kp S &kp C &kp E &kp L &kp L &kp A &kp N &kp E &kp O &kp U &kp S>;
        };
        amen_mutually: amen_mutually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)utually
            bindings = <&kp U &kp T &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_myself_included: amen_myself_included {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)yself included
            bindings = <&kp Y &kp S &kp E &kp L &kp F &kp SPACE &kp I &kp N &kp C &kp L &kp U &kp D &kp E &kp D>;
        };
        amen_marginally: amen_marginally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)arginally
            bindings = <&kp A &kp R &kp G &kp I &kp N &kp A &kp L &kp L &kp Y>;
        };
        amen_magnificent: amen_magnificent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)agnificent
            bindings = <&kp A &kp G &kp N &kp I &kp F &kp I &kp C &kp E &kp N &kp T>;
        };
        amen_management: amen_management {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)anagement
            bindings = <&kp A &kp N &kp A &kp G &kp E &kp M &kp E &kp N &kp T>;
        };
        amen_manually: amen_manually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)anually
            bindings = <&kp A &kp N &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_miles_better: amen_miles_better {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)iles better
            bindings = <&kp I &kp L &kp E &kp S &kp SPACE &kp B &kp E &kp T &kp T &kp E &kp R>;
        };
        amen_make_the_most_o: amen_make_the_most_o {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ake the most of
            bindings = <&kp A &kp K &kp E &kp SPACE &kp T &kp H &kp E &kp SPACE &kp M &kp O &kp S &kp T &kp SPACE &kp O &kp F>;
        };
        amen_merely: amen_merely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)erely
            bindings = <&kp E &kp R &kp E &kp L &kp Y>;
        };
        amen_might: amen_might {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ight
            bindings = <&kp I &kp G &kp H &kp T>;
        };
        amen_moving_on: amen_moving_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)oving on
            bindings = <&kp O &kp V &kp I &kp N &kp G &kp SPACE &kp O &kp N>;
        };
        amen_member: amen_member {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)ember
            bindings = <&kp E &kp M &kp B &kp E &kp R>;
        };
        amen_moreover: amen_moreover {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)oreover
            bindings = <&kp O &kp R &kp E &kp O &kp V &kp E &kp R>;
        };
        amen_mandatory: amen_mandatory {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (m)andatory
            bindings = <&kp A &kp N &kp D &kp A &kp T &kp O &kp R &kp Y>;
        };
        amen_number: amen_number {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)umber
            bindings = <&kp U &kp M &kp B &kp E &kp R>;
        };
        amen_never: amen_never {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ever
            bindings = <&kp E &kp V &kp E &kp R>;
        };
        amen_night_and_day: amen_night_and_day {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ight and day
            bindings = <&kp I &kp G &kp H &kp T &kp SPACE &kp A &kp N &kp D &kp SPACE &kp D &kp A &kp Y>;
        };
        amen_naturally: amen_naturally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)aturally
            bindings = <&kp A &kp T &kp U &kp R &kp A &kp L &kp L &kp Y>;
        };
        amen_namely: amen_namely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)amely
            bindings = <&kp A &kp M &kp E &kp L &kp Y>;
        };
        amen_narrowly: amen_narrowly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)arrowly
            bindings = <&kp A &kp R &kp R &kp O &kp W &kp L &kp Y>;
        };
        amen_never_mind: amen_never_mind {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ever mind
            bindings = <&kp E &kp V &kp E &kp R &kp SPACE &kp M &kp I &kp N &kp D>;
        };
        amen_now_that: amen_now_that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ow that
            bindings = <&kp O &kp W &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_not_to_mention: amen_not_to_mention {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ot to mention
            bindings = <&kp O &kp T &kp SPACE &kp T &kp O &kp SPACE &kp M &kp E &kp N &kp T &kp I &kp O &kp N>;
        };
        amen_nevertheless: amen_nevertheless {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)evertheless
            bindings = <&kp E &kp V &kp E &kp R &kp T &kp H &kp E &kp L &kp E &kp S &kp S>;
        };
        amen_naive: amen_naive {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)aive
            bindings = <&kp A &kp I &kp V &kp E>;
        };
        amen_nothing_much: amen_nothing_much {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)othing much
            bindings = <&kp O &kp T &kp H &kp I &kp N &kp G &kp SPACE &kp M &kp U &kp C &kp H>;
        };
        amen_narrow_minded: amen_narrow_minded {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)arrow-minded
            bindings = <&kp A &kp R &kp R &kp O &kp W &kp MINUS &kp M &kp I &kp N &kp D &kp E &kp D>;
        };
        amen_november: amen_november {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ovember
            bindings = <&kp O &kp V &kp E &kp M &kp B &kp E &kp R>;
        };
        amen_native: amen_native {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ative
            bindings = <&kp A &kp T &kp I &kp V &kp E>;
        };
        amen_nascent: amen_nascent {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ascent
            bindings = <&kp A &kp S &kp C &kp E &kp N &kp T>;
        };
        amen_notwithstanding: amen_notwithstanding {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)otwithstanding
            bindings = <&kp O &kp T &kp W &kp I &kp T &kp H &kp S &kp T &kp A &kp N &kp D &kp I &kp N &kp G>;
        };
        amen_nobody: amen_nobody {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)obody
            bindings = <&kp O &kp B &kp O &kp D &kp Y>;
        };
        amen_nothing: amen_nothing {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)othing
            bindings = <&kp O &kp T &kp H &kp I &kp N &kp G>;
        };
        amen_no_one: amen_no_one {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)o one
            bindings = <&kp O &kp SPACE &kp O &kp N &kp E>;
        };
        amen_necessary: amen_necessary {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ecessary
            bindings = <&kp E &kp C &kp E &kp S &kp S &kp A &kp R &kp Y>;
        };
        amen_nearly: amen_nearly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)early
            bindings = <&kp E &kp A &kp R &kp L &kp Y>;
        };
        amen_nice: amen_nice {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (n)ice
            bindings = <&kp I &kp C &kp E>;
        };
        amen_enough: amen_enough {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)nough
            bindings = <&kp N &kp O &kp U &kp G &kp H>;
        };
        amen_everything: amen_everything {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)verything
            bindings = <&kp V &kp E &kp R &kp Y &kp T &kp H &kp I &kp N &kp G>;
        };
        amen_exactly: amen_exactly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)xactly
            bindings = <&kp X &kp A &kp C &kp T &kp L &kp Y>;
        };
        amen_everyone: amen_everyone {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)veryone
            bindings = <&kp V &kp E &kp R &kp Y &kp O &kp N &kp E>;
        };
        amen_everybody: amen_everybody {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)verybody
            bindings = <&kp V &kp E &kp R &kp Y &kp B &kp O &kp D &kp Y>;
        };
        amen_each_and_every_: amen_each_and_every_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ach and every one
            bindings = <&kp A &kp C &kp H &kp SPACE &kp A &kp N &kp D &kp SPACE &kp E &kp V &kp E &kp R &kp Y &kp SPACE &kp O &kp N &kp E>;
        };
        amen_every_now_and_t: amen_every_now_and_t {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)very now and then
            bindings = <&kp V &kp E &kp R &kp Y &kp SPACE &kp N &kp O &kp W &kp SPACE &kp A &kp N &kp D &kp SPACE &kp T &kp H &kp E &kp N>;
        };
        amen_evidence: amen_evidence {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)vidence
            bindings = <&kp V &kp I &kp D &kp E &kp N &kp C &kp E>;
        };
        amen_each_other: amen_each_other {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ach other
            bindings = <&kp A &kp C &kp H &kp SPACE &kp O &kp T &kp H &kp E &kp R>;
        };
        amen_even_though: amen_even_though {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ven though
            bindings = <&kp V &kp E &kp N &kp SPACE &kp T &kp H &kp O &kp U &kp G &kp H>;
        };
        amen_except_for: amen_except_for {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)xcept for
            bindings = <&kp X &kp C &kp E &kp P &kp T &kp SPACE &kp F &kp O &kp R>;
        };
        amen_every_bit_as: amen_every_bit_as {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)very bit as
            bindings = <&kp V &kp E &kp R &kp Y &kp SPACE &kp B &kp I &kp T &kp SPACE &kp A &kp S>;
        };
        amen_even_so: amen_even_so {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ven so
            bindings = <&kp V &kp E &kp N &kp SPACE &kp S &kp O>;
        };
        amen_ever_since: amen_ever_since {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ver since
            bindings = <&kp V &kp E &kp R &kp SPACE &kp S &kp I &kp N &kp C &kp E>;
        };
        amen_experience: amen_experience {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)xperience
            bindings = <&kp X &kp P &kp E &kp R &kp I &kp E &kp N &kp C &kp E>;
        };
        amen_explicitily: amen_explicitily {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)xplicitily
            bindings = <&kp X &kp P &kp L &kp I &kp C &kp I &kp T &kp I &kp L &kp Y>;
        };
        amen_eventually: amen_eventually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ventually
            bindings = <&kp V &kp E &kp N &kp T &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_elsewhere: amen_elsewhere {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)lsewhere
            bindings = <&kp L &kp S &kp E &kp W &kp H &kp E &kp R &kp E>;
        };
        amen_especially: amen_especially {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)specially
            bindings = <&kp S &kp P &kp E &kp C &kp I &kp A &kp L &kp L &kp Y>;
        };
        amen_essentially: amen_essentially {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)ssentially
            bindings = <&kp S &kp S &kp E &kp N &kp T &kp I &kp A &kp L &kp L &kp Y>;
        };
        amen_employee: amen_employee {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (e)mployee
            bindings = <&kp M &kp P &kp L &kp O &kp Y &kp E &kp E>;
        };
        amen_in_order: amen_in_order {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n order
            bindings = <&kp N &kp SPACE &kp O &kp R &kp D &kp E &kp R>;
        };
        amen_in_my_opinion: amen_in_my_opinion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n my opinion
            bindings = <&kp N &kp SPACE &kp M &kp Y &kp SPACE &kp O &kp P &kp I &kp N &kp I &kp O &kp N>;
        };
        amen_in_advance: amen_in_advance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n advance
            bindings = <&kp N &kp SPACE &kp A &kp D &kp V &kp A &kp N &kp C &kp E>;
        };
        amen_if_i_were_you: amen_if_i_were_you {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)f I were you
            bindings = <&kp F &kp SPACE &kp LS(I) &kp SPACE &kp W &kp E &kp R &kp E &kp SPACE &kp Y &kp O &kp U>;
        };
        amen_in_order_to: amen_in_order_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n order to
            bindings = <&kp N &kp SPACE &kp O &kp R &kp D &kp E &kp R &kp SPACE &kp T &kp O>;
        };
        amen_incidentally: amen_incidentally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)ncidentally
            bindings = <&kp N &kp C &kp I &kp D &kp E &kp N &kp T &kp A &kp L &kp L &kp Y>;
        };
        amen_in_any_case: amen_in_any_case {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n any case
            bindings = <&kp N &kp SPACE &kp A &kp N &kp Y &kp SPACE &kp C &kp A &kp S &kp E>;
        };
        amen_irreversible: amen_irreversible {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)rreversible
            bindings = <&kp R &kp R &kp E &kp V &kp E &kp R &kp S &kp I &kp B &kp L &kp E>;
        };
        amen_in_conclusion: amen_in_conclusion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n conclusion
            bindings = <&kp N &kp SPACE &kp C &kp O &kp N &kp C &kp L &kp U &kp S &kp I &kp O &kp N>;
        };
        amen_it_looks_like: amen_it_looks_like {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)t looks like
            bindings = <&kp T &kp SPACE &kp L &kp O &kp O &kp K &kp S &kp SPACE &kp L &kp I &kp K &kp E>;
        };
        amen_incomprehensibl: amen_incomprehensibl {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)ncomprehensible
            bindings = <&kp N &kp C &kp O &kp M &kp P &kp R &kp E &kp H &kp E &kp N &kp S &kp I &kp B &kp L &kp E>;
        };
        amen_in_the_words_of: amen_in_the_words_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n the words of
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp W &kp O &kp R &kp D &kp S &kp SPACE &kp O &kp F>;
        };
        amen_indecipherable: amen_indecipherable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)ndecipherable
            bindings = <&kp N &kp D &kp E &kp C &kp I &kp P &kp H &kp E &kp R &kp A &kp B &kp L &kp E>;
        };
        amen_it_goes_without: amen_it_goes_without {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)t goes without saying that
            bindings = <&kp T &kp SPACE &kp G &kp O &kp E &kp S &kp SPACE &kp W &kp I &kp T &kp H &kp O &kp U &kp T &kp SPACE &kp S &kp A &kp Y &kp I &kp N &kp G &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_if_you_want_my_: amen_if_you_want_my_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)f you want my opinion
            bindings = <&kp F &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp W &kp A &kp N &kp T &kp SPACE &kp M &kp Y &kp SPACE &kp O &kp P &kp I &kp N &kp I &kp O &kp N>;
        };
        amen_in_the_end: amen_in_the_end {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n the end
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp E &kp N &kp D>;
        };
        amen_in_the_dark: amen_in_the_dark {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n the dark
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp D &kp A &kp R &kp K>;
        };
        amen_in_spite_of: amen_in_spite_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n spite of
            bindings = <&kp N &kp SPACE &kp S &kp P &kp I &kp T &kp E &kp SPACE &kp O &kp F>;
        };
        amen_instance: amen_instance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)nstance
            bindings = <&kp N &kp S &kp T &kp A &kp N &kp C &kp E>;
        };
        amen_in_the_main: amen_in_the_main {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n the main
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp M &kp A &kp I &kp N>;
        };
        amen_immediately: amen_immediately {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)mmediately
            bindings = <&kp M &kp M &kp E &kp D &kp I &kp A &kp T &kp E &kp L &kp Y>;
        };
        amen_in_other_words: amen_in_other_words {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n other words
            bindings = <&kp N &kp SPACE &kp O &kp T &kp H &kp E &kp R &kp SPACE &kp W &kp O &kp R &kp D &kp S>;
        };
        amen_in_contrast: amen_in_contrast {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (i)n contrast
            bindings = <&kp N &kp SPACE &kp C &kp O &kp N &kp T &kp R &kp A &kp S &kp T>;
        };
        amen_often: amen_often {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ften
            bindings = <&kp F &kp T &kp E &kp N>;
        };
        amen_overall: amen_overall {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)verall
            bindings = <&kp V &kp E &kp R &kp A &kp L &kp L>;
        };
        amen_organization: amen_organization {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)rganization
            bindings = <&kp R &kp G &kp A &kp N &kp I &kp Z &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_outside: amen_outside {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)utside
            bindings = <&kp U &kp T &kp S &kp I &kp D &kp E>;
        };
        amen_other: amen_other {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ther
            bindings = <&kp T &kp H &kp E &kp R>;
        };
        amen_on_the_one_hand: amen_on_the_one_hand {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n the one hand
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp O &kp N &kp E &kp SPACE &kp H &kp A &kp N &kp D>;
        };
        amen_on_the_other_ha: amen_on_the_other_ha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n the other hand
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp O &kp T &kp H &kp E &kp R &kp SPACE &kp H &kp A &kp N &kp D>;
        };
        amen_on_balance: amen_on_balance {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n balance
            bindings = <&kp N &kp SPACE &kp B &kp A &kp L &kp A &kp N &kp C &kp E>;
        };
        amen_on_the_contrary: amen_on_the_contrary {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n the contrary
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp C &kp O &kp N &kp T &kp R &kp A &kp R &kp Y>;
        };
        amen_on_the_whole: amen_on_the_whole {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n the whole
            bindings = <&kp N &kp SPACE &kp T &kp H &kp E &kp SPACE &kp W &kp H &kp O &kp L &kp E>;
        };
        amen_one_of_these_da: amen_one_of_these_da {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ne of these days
            bindings = <&kp N &kp E &kp SPACE &kp O &kp F &kp SPACE &kp T &kp H &kp E &kp S &kp E &kp SPACE &kp D &kp A &kp Y &kp S>;
        };
        amen_off_putting: amen_off_putting {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ff-putting
            bindings = <&kp F &kp F &kp MINUS &kp P &kp U &kp T &kp T &kp I &kp N &kp G>;
        };
        amen_outdated: amen_outdated {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)utdated
            bindings = <&kp U &kp T &kp D &kp A &kp T &kp E &kp D>;
        };
        amen_october: amen_october {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ctober
            bindings = <&kp C &kp T &kp O &kp B &kp E &kp R>;
        };
        amen_on_condition_th: amen_on_condition_th {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)n condition that
            bindings = <&kp N &kp SPACE &kp C &kp O &kp N &kp D &kp I &kp T &kp I &kp O &kp N &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_oddly_enough: amen_oddly_enough {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ddly enough
            bindings = <&kp D &kp D &kp L &kp Y &kp SPACE &kp E &kp N &kp O &kp U &kp G &kp H>;
        };
        amen_off_the_top_of_: amen_off_the_top_of_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ff the top of my head
            bindings = <&kp F &kp F &kp SPACE &kp T &kp H &kp E &kp SPACE &kp T &kp O &kp P &kp SPACE &kp O &kp F &kp SPACE &kp M &kp Y &kp SPACE &kp H &kp E &kp A &kp D>;
        };
        amen_out_of_the_blue: amen_out_of_the_blue {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ut of the blue
            bindings = <&kp U &kp T &kp SPACE &kp O &kp F &kp SPACE &kp T &kp H &kp E &kp SPACE &kp B &kp L &kp U &kp E>;
        };
        amen_object: amen_object {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)bject
            bindings = <&kp B &kp J &kp E &kp C &kp T>;
        };
        amen_one_another: amen_one_another {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)ne another
            bindings = <&kp N &kp E &kp SPACE &kp A &kp N &kp O &kp T &kp H &kp E &kp R>;
        };
        amen_or_else: amen_or_else {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)r else
            bindings = <&kp R &kp SPACE &kp E &kp L &kp S &kp E>;
        };
        amen_otherwise: amen_otherwise {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)therwise
            bindings = <&kp T &kp H &kp E &kp R &kp W &kp I &kp S &kp E>;
        };
        amen_opportunity: amen_opportunity {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (o)pportunity
            bindings = <&kp P &kp P &kp O &kp R &kp T &kp U &kp N &kp I &kp T &kp Y>;
        };
        amen_zephyr: amen_zephyr {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ephyr
            bindings = <&kp E &kp P &kp H &kp Y &kp R>;
        };
        amen_zealously: amen_zealously {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ealously
            bindings = <&kp E &kp A &kp L &kp O &kp U &kp S &kp L &kp Y>;
        };
        amen_zero_hour: amen_zero_hour {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ero hour
            bindings = <&kp E &kp R &kp O &kp SPACE &kp H &kp O &kp U &kp R>;
        };
        amen_zip_code: amen_zip_code {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ip code
            bindings = <&kp I &kp P &kp SPACE &kp C &kp O &kp D &kp E>;
        };
        amen_zestfully: amen_zestfully {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)estfully
            bindings = <&kp E &kp S &kp T &kp F &kp U &kp L &kp L &kp Y>;
        };
        amen_zoom_in: amen_zoom_in {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)oom in
            bindings = <&kp O &kp O &kp M &kp SPACE &kp I &kp N>;
        };
        amen_zoom: amen_zoom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)oom
            bindings = <&kp O &kp O &kp M>;
        };
        amen_zero_in_on: amen_zero_in_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ero in on
            bindings = <&kp E &kp R &kp O &kp SPACE &kp I &kp N &kp SPACE &kp O &kp N>;
        };
        amen_zealous: amen_zealous {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ealous
            bindings = <&kp E &kp A &kp L &kp O &kp U &kp S>;
        };
        amen_zenith: amen_zenith {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)enith
            bindings = <&kp E &kp N &kp I &kp T &kp H>;
        };
        amen_zealot: amen_zealot {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)ealot
            bindings = <&kp E &kp A &kp L &kp O &kp T>;
        };
        amen_zillion: amen_zillion {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)illion
            bindings = <&kp I &kp L &kp L &kp I &kp O &kp N>;
        };
        amen_zigzag: amen_zigzag {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (z)igzag
            bindings = <&kp I &kp G &kp Z &kp A &kp G>;
        };
        amen_i_reckon: amen_i_reckon {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I reckon
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp R &kp E &kp C &kp K &kp O &kp N>;
        };
        amen_i_think: amen_i_think {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I think
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp T &kp H &kp I &kp N &kp K>;
        };
        amen_i_guess: amen_i_guess {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I guess
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp G &kp U &kp E &kp S &kp S>;
        };
        amen_ill_say: amen_ill_say {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I’ll say!
            bindings = <&kp BSPC &kp LS(I) &kp APOS &kp L &kp L &kp SPACE &kp S &kp A &kp Y &kp EXCL>;
        };
        amen_ive_made_up_my_: amen_ive_made_up_my_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I’ve made up my mind to
            bindings = <&kp BSPC &kp LS(I) &kp APOS &kp V &kp E &kp SPACE &kp M &kp A &kp D &kp E &kp SPACE &kp U &kp P &kp SPACE &kp M &kp Y &kp SPACE &kp M &kp I &kp N &kp D &kp SPACE &kp T &kp O>;
        };
        amen_i_tend_to_think: amen_i_tend_to_think {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I tend to think
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp T &kp E &kp N &kp D &kp SPACE &kp T &kp O &kp SPACE &kp T &kp H &kp I &kp N &kp K>;
        };
        amen_im_toying_with_: amen_im_toying_with_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I’m toying with the idea of
            bindings = <&kp BSPC &kp LS(I) &kp APOS &kp M &kp SPACE &kp T &kp O &kp Y &kp I &kp N &kp G &kp SPACE &kp W &kp I &kp T &kp H &kp SPACE &kp T &kp H &kp E &kp SPACE &kp I &kp D &kp E &kp A &kp SPACE &kp O &kp F>;
        };
        amen_it_occurs_to_me: amen_it_occurs_to_me {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]It occurs to me
            bindings = <&kp BSPC &kp LS(I) &kp T &kp SPACE &kp O &kp C &kp C &kp U &kp R &kp S &kp SPACE &kp T &kp O &kp SPACE &kp M &kp E>;
        };
        amen_its_just_dawned: amen_its_just_dawned {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]It’s just dawned on me
            bindings = <&kp BSPC &kp LS(I) &kp T &kp APOS &kp S &kp SPACE &kp J &kp U &kp S &kp T &kp SPACE &kp D &kp A &kp W &kp N &kp E &kp D &kp SPACE &kp O &kp N &kp SPACE &kp M &kp E>;
        };
        amen_i_gather: amen_i_gather {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I gather
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp G &kp A &kp T &kp H &kp E &kp R>;
        };
        amen_as_we_have_seen: amen_as_we_have_seen {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]As we have seen
            bindings = <&kp BSPC &kp LS(A) &kp S &kp SPACE &kp W &kp E &kp SPACE &kp H &kp A &kp V &kp E &kp SPACE &kp S &kp E &kp E &kp N>;
        };
        amen_i_believe: amen_i_believe {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]I believe
            bindings = <&kp BSPC &kp LS(I) &kp SPACE &kp B &kp E &kp L &kp I &kp E &kp V &kp E>;
        };
        amen_suffice_it_to_s: amen_suffice_it_to_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]Suffice it to say
            bindings = <&kp BSPC &kp LS(S) &kp U &kp F &kp F &kp I &kp C &kp E &kp SPACE &kp I &kp T &kp SPACE &kp T &kp O &kp SPACE &kp S &kp A &kp Y>;
        };
        amen_it_appears_that: amen_it_appears_that {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]It appears that
            bindings = <&kp BSPC &kp LS(I) &kp T &kp SPACE &kp A &kp P &kp P &kp E &kp A &kp R &kp S &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_sort_it_out_onc: amen_sort_it_out_onc {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]sort it out once and for all
            bindings = <&kp BSPC &kp S &kp O &kp R &kp T &kp SPACE &kp I &kp T &kp SPACE &kp O &kp U &kp T &kp SPACE &kp O &kp N &kp C &kp E &kp SPACE &kp A &kp N &kp D &kp SPACE &kp F &kp O &kp R &kp SPACE &kp A &kp L &kp L>;
        };
        amen_we_now_turn_to: amen_we_now_turn_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]We now turn to
            bindings = <&kp BSPC &kp LS(W) &kp E &kp SPACE &kp N &kp O &kp W &kp SPACE &kp T &kp U &kp R &kp N &kp SPACE &kp T &kp O>;
        };
        amen_at_this_point: amen_at_this_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]At this point
            bindings = <&kp BSPC &kp LS(A) &kp T &kp SPACE &kp T &kp H &kp I &kp S &kp SPACE &kp P &kp O &kp I &kp N &kp T>;
        };
        amen_come_what_may: amen_come_what_may {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [x]Come what may
            bindings = <&kp BSPC &kp LS(C) &kp O &kp M &kp E &kp SPACE &kp W &kp H &kp A &kp T &kp SPACE &kp M &kp A &kp Y>;
        };
        amen_certainly: amen_certainly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ertainly
            bindings = <&kp E &kp R &kp T &kp A &kp I &kp N &kp L &kp Y>;
        };
        amen_could: amen_could {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ould
            bindings = <&kp O &kp U &kp L &kp D>;
        };
        amen_comparatively: amen_comparatively {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)omparatively
            bindings = <&kp O &kp M &kp P &kp A &kp R &kp A &kp T &kp I &kp V &kp E &kp L &kp Y>;
        };
        amen_contribute_to: amen_contribute_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ontribute to
            bindings = <&kp O &kp N &kp T &kp R &kp I &kp B &kp U &kp T &kp E &kp SPACE &kp T &kp O>;
        };
        amen_consciously: amen_consciously {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)onsciously
            bindings = <&kp O &kp N &kp S &kp C &kp I &kp O &kp U &kp S &kp L &kp Y>;
        };
        amen_clearly: amen_clearly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)learly
            bindings = <&kp L &kp E &kp A &kp R &kp L &kp Y>;
        };
        amen_carefully: amen_carefully {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)arefully
            bindings = <&kp A &kp R &kp E &kp F &kp U &kp L &kp L &kp Y>;
        };
        amen_concerning: amen_concerning {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)oncerning
            bindings = <&kp O &kp N &kp C &kp E &kp R &kp N &kp I &kp N &kp G>;
        };
        amen_characteristica: amen_characteristica {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)haracteristically
            bindings = <&kp H &kp A &kp R &kp A &kp C &kp T &kp E &kp R &kp I &kp S &kp T &kp I &kp C &kp A &kp L &kp L &kp Y>;
        };
        amen_consequently: amen_consequently {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)onsequently
            bindings = <&kp O &kp N &kp S &kp E &kp Q &kp U &kp E &kp N &kp T &kp L &kp Y>;
        };
        amen_contrary_to_exp: amen_contrary_to_exp {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ontrary to expectations
            bindings = <&kp O &kp N &kp T &kp R &kp A &kp R &kp Y &kp SPACE &kp T &kp O &kp SPACE &kp E &kp X &kp P &kp E &kp C &kp T &kp A &kp T &kp I &kp O &kp N &kp S>;
        };
        amen_condition: amen_condition {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ondition
            bindings = <&kp O &kp N &kp D &kp I &kp T &kp I &kp O &kp N>;
        };
        amen_computer: amen_computer {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)omputer
            bindings = <&kp O &kp M &kp P &kp U &kp T &kp E &kp R>;
        };
        amen_character: amen_character {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)haracter
            bindings = <&kp H &kp A &kp R &kp A &kp C &kp T &kp E &kp R>;
        };
        amen_common_ground: amen_common_ground {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)ommon ground
            bindings = <&kp O &kp M &kp M &kp O &kp N &kp SPACE &kp G &kp R &kp O &kp U &kp N &kp D>;
        };
        amen_conversely: amen_conversely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)onversely
            bindings = <&kp O &kp N &kp V &kp E &kp R &kp S &kp E &kp L &kp Y>;
        };
        amen_candidate: amen_candidate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)andidate
            bindings = <&kp A &kp N &kp D &kp I &kp D &kp A &kp T &kp E>;
        };
        amen_constructively: amen_constructively {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)onstructively
            bindings = <&kp O &kp N &kp S &kp T &kp R &kp U &kp C &kp T &kp I &kp V &kp E &kp L &kp Y>;
        };
        amen_cheers: amen_cheers {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)heers
            bindings = <&kp H &kp E &kp E &kp R &kp S>;
        };
        amen_carte_blanche: amen_carte_blanche {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (c)arte blanche
            bindings = <&kp A &kp R &kp T &kp E &kp SPACE &kp B &kp L &kp A &kp N &kp C &kp H &kp E>;
        };
        amen_during: amen_during {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)uring
            bindings = <&kp U &kp R &kp I &kp N &kp G>;
        };
        amen_despite: amen_despite {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)espite
            bindings = <&kp E &kp S &kp P &kp I &kp T &kp E>;
        };
        amen_different: amen_different {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)ifferent
            bindings = <&kp I &kp F &kp F &kp E &kp R &kp E &kp N &kp T>;
        };
        amen_difficult_thoug: amen_difficult_thoug {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)ifficult though it was,
            bindings = <&kp I &kp F &kp F &kp I &kp C &kp U &kp L &kp T &kp SPACE &kp T &kp H &kp O &kp U &kp G &kp H &kp SPACE &kp I &kp T &kp SPACE &kp W &kp A &kp S &kp COMMA>;
        };
        amen_determination: amen_determination {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)etermination
            bindings = <&kp E &kp T &kp E &kp R &kp M &kp I &kp N &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_dawned_on_me: amen_dawned_on_me {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)awned on me
            bindings = <&kp A &kp W &kp N &kp E &kp D &kp SPACE &kp O &kp N &kp SPACE &kp M &kp E>;
        };
        amen_down: amen_down {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)own
            bindings = <&kp O &kp W &kp N>;
        };
        amen_day_in_day_out: amen_day_in_day_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)ay in, day out
            bindings = <&kp A &kp Y &kp SPACE &kp I &kp N &kp COMMA &kp SPACE &kp D &kp A &kp Y &kp SPACE &kp O &kp U &kp T>;
        };
        amen_doubtless: amen_doubtless {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)oubtless
            bindings = <&kp O &kp U &kp B &kp T &kp L &kp E &kp S &kp S>;
        };
        amen_directly: amen_directly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)irectly
            bindings = <&kp I &kp R &kp E &kp C &kp T &kp L &kp Y>;
        };
        amen_dear_sirmadam: amen_dear_sirmadam {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)ear Sir/Madam,
            bindings = <&kp E &kp A &kp R &kp SPACE &kp LS(S) &kp I &kp R &kp FSLH &kp LS(M) &kp A &kp D &kp A &kp M &kp COMMA>;
        };
        amen_december: amen_december {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (d)ecember
            bindings = <&kp E &kp C &kp E &kp M &kp B &kp E &kp R>;
        };
        amen_verbally: amen_verbally {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)erbally
            bindings = <&kp E &kp R &kp B &kp A &kp L &kp L &kp Y>;
        };
        amen_vastly: amen_vastly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)astly
            bindings = <&kp A &kp S &kp T &kp L &kp Y>;
        };
        amen_vehemently: amen_vehemently {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ehemently
            bindings = <&kp E &kp H &kp E &kp M &kp E &kp N &kp T &kp L &kp Y>;
        };
        amen_vehicle: amen_vehicle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ehicle
            bindings = <&kp E &kp H &kp I &kp C &kp L &kp E>;
        };
        amen_visualization: amen_visualization {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)isualization
            bindings = <&kp I &kp S &kp U &kp A &kp L &kp I &kp Z &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_virtually: amen_virtually {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)irtually
            bindings = <&kp I &kp R &kp T &kp U &kp A &kp L &kp L &kp Y>;
        };
        amen_vague: amen_vague {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ague
            bindings = <&kp A &kp G &kp U &kp E>;
        };
        amen_visible: amen_visible {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)isible
            bindings = <&kp I &kp S &kp I &kp B &kp L &kp E>;
        };
        amen_valid: amen_valid {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)alid
            bindings = <&kp A &kp L &kp I &kp D>;
        };
        amen_various: amen_various {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)arious
            bindings = <&kp A &kp R &kp I &kp O &kp U &kp S>;
        };
        amen_variety: amen_variety {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ariety
            bindings = <&kp A &kp R &kp I &kp E &kp T &kp Y>;
        };
        amen_versatile: amen_versatile {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ersatile
            bindings = <&kp E &kp R &kp S &kp A &kp T &kp I &kp L &kp E>;
        };
        amen_verbatim: amen_verbatim {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)erbatim
            bindings = <&kp E &kp R &kp B &kp A &kp T &kp I &kp M>;
        };
        amen_version: amen_version {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ersion
            bindings = <&kp E &kp R &kp S &kp I &kp O &kp N>;
        };
        amen_vulnerable: amen_vulnerable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ulnerable
            bindings = <&kp U &kp L &kp N &kp E &kp R &kp A &kp B &kp L &kp E>;
        };
        amen_variable: amen_variable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ariable
            bindings = <&kp A &kp R &kp I &kp A &kp B &kp L &kp E>;
        };
        amen_variation: amen_variation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ariation
            bindings = <&kp A &kp R &kp I &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_vociferously: amen_vociferously {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ociferously
            bindings = <&kp O &kp C &kp I &kp F &kp E &kp R &kp O &kp U &kp S &kp L &kp Y>;
        };
        amen_vantage_point: amen_vantage_point {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)antage point
            bindings = <&kp A &kp N &kp T &kp A &kp G &kp E &kp SPACE &kp P &kp O &kp I &kp N &kp T>;
        };
        amen_violation: amen_violation {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)iolation
            bindings = <&kp I &kp O &kp L &kp A &kp T &kp I &kp O &kp N>;
        };
        amen_valuable: amen_valuable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)aluable
            bindings = <&kp A &kp L &kp U &kp A &kp B &kp L &kp E>;
        };
        amen_vice_versa: amen_vice_versa {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)ice versa
            bindings = <&kp I &kp C &kp E &kp SPACE &kp V &kp E &kp R &kp S &kp A>;
        };
        amen_vantage_point1: amen_vantage_point1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (v)antage point
            bindings = <&kp A &kp N &kp T &kp A &kp G &kp E &kp SPACE &kp P &kp O &kp I &kp N &kp T>;
        };
        amen_kindly: amen_kindly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)indly
            bindings = <&kp I &kp N &kp D &kp L &kp Y>;
        };
        amen_knowledge: amen_knowledge {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)nowledge
            bindings = <&kp N &kp O &kp W &kp L &kp E &kp D &kp G &kp E>;
        };
        amen_knowledgeable: amen_knowledgeable {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)nowledgeable
            bindings = <&kp N &kp O &kp W &kp L &kp E &kp D &kp G &kp E &kp A &kp B &kp L &kp E>;
        };
        amen_keenly: amen_keenly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)eenly
            bindings = <&kp E &kp E &kp N &kp L &kp Y>;
        };
        amen_knowingly: amen_knowingly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)nowingly
            bindings = <&kp N &kp O &kp W &kp I &kp N &kp G &kp L &kp Y>;
        };
        amen_key_feature: amen_key_feature {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)ey feature
            bindings = <&kp E &kp Y &kp SPACE &kp F &kp E &kp A &kp T &kp U &kp R &kp E>;
        };
        amen_key_factor: amen_key_factor {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)ey factor
            bindings = <&kp E &kp Y &kp SPACE &kp F &kp A &kp C &kp T &kp O &kp R>;
        };
        amen_key_element: amen_key_element {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)ey element
            bindings = <&kp E &kp Y &kp SPACE &kp E &kp L &kp E &kp M &kp E &kp N &kp T>;
        };
        amen_killer_feature: amen_killer_feature {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)iller-feature
            bindings = <&kp I &kp L &kp L &kp E &kp R &kp MINUS &kp F &kp E &kp A &kp T &kp U &kp R &kp E>;
        };
        amen_keyboard: amen_keyboard {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)eyboard
            bindings = <&kp E &kp Y &kp B &kp O &kp A &kp R &kp D>;
        };
        amen_kiss_principle: amen_kiss_principle {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)ISS principle
            bindings = <&kp LS(I) &kp LS(S) &kp LS(S) &kp SPACE &kp P &kp R &kp I &kp N &kp C &kp I &kp P &kp L &kp E>;
        };
        amen_know_how: amen_know_how {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (k)now-how
            bindings = <&kp N &kp O &kp W &kp MINUS &kp H &kp O &kp W>;
        };
        amen_highly_likely: amen_highly_likely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ighly likely
            bindings = <&kp I &kp G &kp H &kp L &kp Y &kp SPACE &kp L &kp I &kp K &kp E &kp L &kp Y>;
        };
        amen_hopefully: amen_hopefully {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)opefully
            bindings = <&kp O &kp P &kp E &kp F &kp U &kp L &kp L &kp Y>;
        };
        amen_highly_unlikely: amen_highly_unlikely {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ighly unlikely
            bindings = <&kp I &kp G &kp H &kp L &kp Y &kp SPACE &kp U &kp N &kp L &kp I &kp K &kp E &kp L &kp Y>;
        };
        amen_helpful: amen_helpful {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)elpful
            bindings = <&kp E &kp L &kp P &kp F &kp U &kp L>;
        };
        amen_however: amen_however {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)owever
            bindings = <&kp O &kp W &kp E &kp V &kp E &kp R>;
        };
        amen_having_said_tha: amen_having_said_tha {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)aving said that
            bindings = <&kp A &kp V &kp I &kp N &kp G &kp SPACE &kp S &kp A &kp I &kp D &kp SPACE &kp T &kp H &kp A &kp T>;
        };
        amen_hard_as_i_tried: amen_hard_as_i_tried {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ard as I tried
            bindings = <&kp A &kp R &kp D &kp SPACE &kp A &kp S &kp SPACE &kp LS(I) &kp SPACE &kp T &kp R &kp I &kp E &kp D>;
        };
        amen_herself: amen_herself {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)erself
            bindings = <&kp E &kp R &kp S &kp E &kp L &kp F>;
        };
        amen_himself: amen_himself {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)imself
            bindings = <&kp I &kp M &kp S &kp E &kp L &kp F>;
        };
        amen_henceforth: amen_henceforth {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)enceforth
            bindings = <&kp E &kp N &kp C &kp E &kp F &kp O &kp R &kp T &kp H>;
        };
        amen_here_and_there: amen_here_and_there {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ere and there
            bindings = <&kp E &kp R &kp E &kp SPACE &kp A &kp N &kp D &kp SPACE &kp T &kp H &kp E &kp R &kp E>;
        };
        amen_half_a_mind_to: amen_half_a_mind_to {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)alf a mind to
            bindings = <&kp A &kp L &kp F &kp SPACE &kp A &kp SPACE &kp M &kp I &kp N &kp D &kp SPACE &kp T &kp O>;
        };
        amen_honestly: amen_honestly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)onestly
            bindings = <&kp O &kp N &kp E &kp S &kp T &kp L &kp Y>;
        };
        amen_high_hopes_of: amen_high_hopes_of {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)igh hopes of
            bindings = <&kp I &kp G &kp H &kp SPACE &kp H &kp O &kp P &kp E &kp S &kp SPACE &kp O &kp F>;
        };
        amen_hardly_ever: amen_hardly_ever {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ardly ever
            bindings = <&kp A &kp R &kp D &kp L &kp Y &kp SPACE &kp E &kp V &kp E &kp R>;
        };
        amen_hardly_enough: amen_hardly_enough {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (h)ardly enough
            bindings = <&kp A &kp R &kp D &kp L &kp Y &kp SPACE &kp E &kp N &kp O &kp U &kp G &kp H>;
        };
        amen_thats_it: amen_thats_it {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]That’s it.
            bindings = <&kp BSPC &kp LS(T) &kp H &kp A &kp T &kp APOS &kp S &kp SPACE &kp I &kp T &kp DOT>;
        };
        amen_thats_all_i_hav: amen_thats_all_i_hav {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]That’s all I have to say.
            bindings = <&kp BSPC &kp LS(T) &kp H &kp A &kp T &kp APOS &kp S &kp SPACE &kp A &kp L &kp L &kp SPACE &kp LS(I) &kp SPACE &kp H &kp A &kp V &kp E &kp SPACE &kp T &kp O &kp SPACE &kp S &kp A &kp Y &kp DOT>;
        };
        amen_so_be_it: amen_so_be_it {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]So be it.
            bindings = <&kp BSPC &kp LS(S) &kp O &kp SPACE &kp B &kp E &kp SPACE &kp I &kp T &kp DOT>;
        };
        amen_ie: amen_ie {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]i.e.
            bindings = <&kp BSPC &kp I &kp DOT &kp E &kp DOT>;
        };
        amen_eg: amen_eg {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]e.g.
            bindings = <&kp BSPC &kp E &kp DOT &kp G &kp DOT>;
        };
        amen_to_cut_a_long_s: amen_to_cut_a_long_s {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]To cut a long story short,
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp C &kp U &kp T &kp SPACE &kp A &kp SPACE &kp L &kp O &kp N &kp G &kp SPACE &kp S &kp T &kp O &kp R &kp Y &kp SPACE &kp S &kp H &kp O &kp R &kp T &kp COMMA>;
        };
        amen_in_short: amen_in_short {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]In short, 
            bindings = <&kp BSPC &kp LS(I) &kp N &kp SPACE &kp S &kp H &kp O &kp R &kp T &kp COMMA &kp SPACE>;
        };
        amen_on_balance1: amen_on_balance1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]On balance,
            bindings = <&kp BSPC &kp LS(O) &kp N &kp SPACE &kp B &kp A &kp L &kp A &kp N &kp C &kp E &kp COMMA>;
        };
        amen_to_cap_it_all: amen_to_cap_it_all {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]To cap it all,
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp C &kp A &kp P &kp SPACE &kp I &kp T &kp SPACE &kp A &kp L &kp L &kp COMMA>;
        };
        amen_it_all_boils_do: amen_it_all_boils_do {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]It all boils down to
            bindings = <&kp BSPC &kp LS(I) &kp T &kp SPACE &kp A &kp L &kp L &kp SPACE &kp B &kp O &kp I &kp L &kp S &kp SPACE &kp D &kp O &kp W &kp N &kp SPACE &kp T &kp O>;
        };
        amen_to_summarise: amen_to_summarise {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]To summarise,
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp S &kp U &kp M &kp M &kp A &kp R &kp I &kp S &kp E &kp COMMA>;
        };
        amen_to_sum_up: amen_to_sum_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]To sum up,
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp S &kp U &kp M &kp SPACE &kp U &kp P &kp COMMA>;
        };
        amen_in_summary: amen_in_summary {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]In summary,
            bindings = <&kp BSPC &kp LS(I) &kp N &kp SPACE &kp S &kp U &kp M &kp M &kp A &kp R &kp Y &kp COMMA>;
        };
        amen_in_conclusion1: amen_in_conclusion1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]In conclusion,
            bindings = <&kp BSPC &kp LS(I) &kp N &kp SPACE &kp C &kp O &kp N &kp C &kp L &kp U &kp S &kp I &kp O &kp N &kp COMMA>;
        };
        amen_to_conclude: amen_to_conclude {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [.]To conclude,
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp C &kp O &kp N &kp C &kp L &kp U &kp D &kp E &kp COMMA>;
        };
        amen_could_you_be_mo: amen_could_you_be_mo {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [/]Could you be more specific?
            bindings = <&kp BSPC &kp LS(C) &kp O &kp U &kp L &kp D &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp B &kp E &kp SPACE &kp M &kp O &kp R &kp E &kp SPACE &kp S &kp P &kp E &kp C &kp I &kp F &kp I &kp C &kp QMARK>;
        };
        amen_are_you_sure: amen_are_you_sure {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [/]Are you sure?
            bindings = <&kp BSPC &kp LS(A) &kp R &kp E &kp SPACE &kp Y &kp O &kp U &kp SPACE &kp S &kp U &kp R &kp E &kp QMARK>;
        };
        amen_what_the_future: amen_what_the_future {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [/]what the future has in store
            bindings = <&kp BSPC &kp W &kp H &kp A &kp T &kp SPACE &kp T &kp H &kp E &kp SPACE &kp F &kp U &kp T &kp U &kp R &kp E &kp SPACE &kp H &kp A &kp S &kp SPACE &kp I &kp N &kp SPACE &kp S &kp T &kp O &kp R &kp E>;
        };
        amen_to_whom_it_may_: amen_to_whom_it_may_ {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [/]To Whom It May Concern
            bindings = <&kp BSPC &kp LS(T) &kp O &kp SPACE &kp LS(W) &kp H &kp O &kp M &kp SPACE &kp LS(I) &kp T &kp SPACE &kp LS(M) &kp A &kp Y &kp SPACE &kp LS(C) &kp O &kp N &kp C &kp E &kp R &kp N>;
        };
        amen_in_parenthesis: amen_in_parenthesis {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [(]in parenthesis
            bindings = <&kp BSPC &kp I &kp N &kp SPACE &kp P &kp A &kp R &kp E &kp N &kp T &kp H &kp E &kp S &kp I &kp S>;
        };
        amen_in_parenthesis1: amen_in_parenthesis1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [(]In parenthesis
            bindings = <&kp BSPC &kp LS(I) &kp N &kp SPACE &kp P &kp A &kp R &kp E &kp N &kp T &kp H &kp E &kp S &kp I &kp S>;
        };
        amen_no_pain_no_gain: amen_no_pain_no_gain {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [$]No pain, no gain.
            bindings = <&kp BSPC &kp LS(N) &kp O &kp SPACE &kp P &kp A &kp I &kp N &kp COMMA &kp SPACE &kp N &kp O &kp SPACE &kp G &kp A &kp I &kp N &kp DOT>;
        };
        amen_shut_up_and_tak: amen_shut_up_and_tak {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [$]Shut up and take my money!
            bindings = <&kp BSPC &kp LS(S) &kp H &kp U &kp T &kp SPACE &kp U &kp P &kp SPACE &kp A &kp N &kp D &kp SPACE &kp T &kp A &kp K &kp E &kp SPACE &kp M &kp Y &kp SPACE &kp M &kp O &kp N &kp E &kp Y &kp EXCL>;
        };
        amen_moreover1: amen_moreover1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [+]Moreover, 
            bindings = <&kp BSPC &kp LS(M) &kp O &kp R &kp E &kp O &kp V &kp E &kp R &kp COMMA &kp SPACE>;
        };
        amen_additional: amen_additional {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [+]additional
            bindings = <&kp BSPC &kp A &kp D &kp D &kp I &kp T &kp I &kp O &kp N &kp A &kp L>;
        };
        amen_additional1: amen_additional1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [+]Additional
            bindings = <&kp BSPC &kp LS(A) &kp D &kp D &kp I &kp T &kp I &kp O &kp N &kp A &kp L>;
        };
        amen_go_for_it: amen_go_for_it {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Go for it!
            bindings = <&kp BSPC &kp LS(G) &kp O &kp SPACE &kp F &kp O &kp R &kp SPACE &kp I &kp T &kp EXCL>;
        };
        amen_touch: amen_touch {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Touché.
            bindings = <&kp BSPC &kp LS(T) &kp O &kp U &kp C &kp H &kp E &kp DOT>;
        };
        amen_sure_go_ahead: amen_sure_go_ahead {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Sure, go ahead!
            bindings = <&kp BSPC &kp LS(S) &kp U &kp R &kp E &kp COMMA &kp SPACE &kp G &kp O &kp SPACE &kp A &kp H &kp E &kp A &kp D &kp EXCL>;
        };
        amen_keep_it_up: amen_keep_it_up {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Keep it up!
            bindings = <&kp BSPC &kp LS(K) &kp E &kp E &kp P &kp SPACE &kp I &kp T &kp SPACE &kp U &kp P &kp EXCL>;
        };
        amen_now_then: amen_now_then {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Now then!
            bindings = <&kp BSPC &kp LS(N) &kp O &kp W &kp SPACE &kp T &kp H &kp E &kp N &kp EXCL>;
        };
        amen_come_on: amen_come_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Come on!
            bindings = <&kp BSPC &kp LS(C) &kp O &kp M &kp E &kp SPACE &kp O &kp N &kp EXCL>;
        };
        amen_dream_on: amen_dream_on {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [!]Dream on!
            bindings = <&kp BSPC &kp LS(D) &kp R &kp E &kp A &kp M &kp SPACE &kp O &kp N &kp EXCL>;
        };
        amen_prokofyevme: amen_prokofyevme {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (@)prokofyev.me
            bindings = <&kp P &kp R &kp O &kp K &kp O &kp F &kp Y &kp E &kp V &kp DOT &kp M &kp E>;
        };
        amen_yandexru: amen_yandexru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (@)yandex.ru
            bindings = <&kp Y &kp A &kp N &kp D &kp E &kp X &kp DOT &kp R &kp U>;
        };
        amen_gmailcom: amen_gmailcom {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // (@)gmail.com
            bindings = <&kp G &kp M &kp A &kp I &kp L &kp DOT &kp C &kp O &kp M>;
        };
        amen_ad_hominem: amen_ad_hominem {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [@]ad hominem
            bindings = <&kp BSPC &kp A &kp D &kp SPACE &kp H &kp O &kp M &kp I &kp N &kp E &kp M>;
        };
        amen_sunday: amen_sunday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [7]Sunday
            bindings = <&kp BSPC &kp LS(S) &kp U &kp N &kp D &kp A &kp Y>;
        };
        amen_seventhly: amen_seventhly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [7]seventhly
            bindings = <&kp BSPC &kp S &kp E &kp V &kp E &kp N &kp T &kp H &kp L &kp Y>;
        };
        amen_seventhly1: amen_seventhly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [7]Seventhly
            bindings = <&kp BSPC &kp LS(S) &kp E &kp V &kp E &kp N &kp T &kp H &kp L &kp Y>;
        };
        amen_eighthly: amen_eighthly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [8]eighthly
            bindings = <&kp BSPC &kp E &kp I &kp G &kp H &kp T &kp H &kp L &kp Y>;
        };
        amen_eighthly1: amen_eighthly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [8]Eighthly
            bindings = <&kp BSPC &kp LS(E) &kp I &kp G &kp H &kp T &kp H &kp L &kp Y>;
        };
        amen_ninethly: amen_ninethly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [9]ninethly
            bindings = <&kp BSPC &kp N &kp I &kp N &kp E &kp T &kp H &kp L &kp Y>;
        };
        amen_ninethly1: amen_ninethly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [9]Ninethly
            bindings = <&kp BSPC &kp LS(N) &kp I &kp N &kp E &kp T &kp H &kp L &kp Y>;
        };
        amen_thursday: amen_thursday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [4]Thursday
            bindings = <&kp BSPC &kp LS(T) &kp H &kp U &kp R &kp S &kp D &kp A &kp Y>;
        };
        amen_fourthly: amen_fourthly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [4]fourthly
            bindings = <&kp BSPC &kp F &kp O &kp U &kp R &kp T &kp H &kp L &kp Y>;
        };
        amen_fourthly1: amen_fourthly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [4]Fourthly
            bindings = <&kp BSPC &kp LS(F) &kp O &kp U &kp R &kp T &kp H &kp L &kp Y>;
        };
        amen_friday: amen_friday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [5]Friday
            bindings = <&kp BSPC &kp LS(F) &kp R &kp I &kp D &kp A &kp Y>;
        };
        amen_fifthly: amen_fifthly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [5]fifthly
            bindings = <&kp BSPC &kp F &kp I &kp F &kp T &kp H &kp L &kp Y>;
        };
        amen_fifthly1: amen_fifthly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [5]Fifthly
            bindings = <&kp BSPC &kp LS(F) &kp I &kp F &kp T &kp H &kp L &kp Y>;
        };
        amen_saturday: amen_saturday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [6]Saturday
            bindings = <&kp BSPC &kp LS(S) &kp A &kp T &kp U &kp R &kp D &kp A &kp Y>;
        };
        amen_sixthly: amen_sixthly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [6]Sixthly
            bindings = <&kp BSPC &kp LS(S) &kp I &kp X &kp T &kp H &kp L &kp Y>;
        };
        amen_sixthly1: amen_sixthly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [6]Sixthly
            bindings = <&kp BSPC &kp LS(S) &kp I &kp X &kp T &kp H &kp L &kp Y>;
        };
        amen_monday: amen_monday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [1]Monday
            bindings = <&kp BSPC &kp LS(M) &kp O &kp N &kp D &kp A &kp Y>;
        };
        amen_firstly: amen_firstly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [1]firstly
            bindings = <&kp BSPC &kp F &kp I &kp R &kp S &kp T &kp L &kp Y>;
        };
        amen_firstly1: amen_firstly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [1]Firstly
            bindings = <&kp BSPC &kp LS(F) &kp I &kp R &kp S &kp T &kp L &kp Y>;
        };
        amen_tuesday: amen_tuesday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [2]Tuesday
            bindings = <&kp BSPC &kp LS(T) &kp U &kp E &kp S &kp D &kp A &kp Y>;
        };
        amen_secondly: amen_secondly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [2]secondly
            bindings = <&kp BSPC &kp S &kp E &kp C &kp O &kp N &kp D &kp L &kp Y>;
        };
        amen_secondly1: amen_secondly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [2]Secondly
            bindings = <&kp BSPC &kp LS(S) &kp E &kp C &kp O &kp N &kp D &kp L &kp Y>;
        };
        amen_wednesday: amen_wednesday {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [3]Wednesday
            bindings = <&kp BSPC &kp LS(W) &kp E &kp D &kp N &kp E &kp S &kp D &kp A &kp Y>;
        };
        amen_thirdly: amen_thirdly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [3]thirdly
            bindings = <&kp BSPC &kp T &kp H &kp I &kp R &kp D &kp L &kp Y>;
        };
        amen_thirdly1: amen_thirdly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [3]Thirdly
            bindings = <&kp BSPC &kp LS(T) &kp H &kp I &kp R &kp D &kp L &kp Y>;
        };
        amen_zerothly: amen_zerothly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [0]zerothly
            bindings = <&kp BSPC &kp Z &kp E &kp R &kp O &kp T &kp H &kp L &kp Y>;
        };
        amen_zerothly1: amen_zerothly1 {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [0]Zerothly
            bindings = <&kp BSPC &kp LS(Z) &kp E &kp R &kp O &kp T &kp H &kp L &kp Y>;
        };
        amen_count_me_out: amen_count_me_out {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [-]Count me out!
            bindings = <&kp BSPC &kp LS(C) &kp O &kp U &kp N &kp T &kp SPACE &kp M &kp E &kp SPACE &kp O &kp U &kp T &kp EXCL>;
        };
        amen_english: amen_english {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <U_ANTMORPH_MACRO_WAIT>;
            tap-ms = <U_ANTMORPH_MACRO_TAP>;
            // [ ]English
            bindings = <&kp BSPC &kp LS(E) &kp N &kp G &kp L &kp I &kp S &kp H>;
        };
    };
};
